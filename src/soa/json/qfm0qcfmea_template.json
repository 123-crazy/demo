{
  "BusinessObjectInterface": [
    {
      "createRelease": "Awp04.3.0",
      "description": "Interface Name for Business Object Qfm0ActionPriority",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0ActionPriority",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0ActionPriority"
    },
    {
      "createRelease": "Awp05.0.0",
      "description": "Interface Name for Business Object Qfm0CalledBy",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0CalledBy",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0CalledBy"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0FMEAElement",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEAElement",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEAElement"
    },
    {
      "createRelease": "Awp04.3.0",
      "description": "Interface Name for Business Object Qfm0FMEAGuideline",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEAGuideline",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEAGuideline"
    },
    {
      "createRelease": "Awp05.0.0",
      "description": "Interface Name for Business Object Qfm0FMEAGuidelineLov",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEAGuidelineLov",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEAGuidelineLov"
    },
    {
      "createRelease": "Awp04.1.0",
      "description": "Interface Name for Business Object Qfm0FMEANode",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEANode",
      "namespace": "qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEANode"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0FailureElement",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FailureElement",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FailureElement"
    },
    {
      "createRelease": "Awp05.0.0",
      "description": "Interface Name for Business Object Qfm0FormSheetSourceProvider",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FormSheetSourceProvider",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FormSheetSourceProvider"
    },
    {
      "createRelease": "Awp04.1.0",
      "description": "Interface Name for Business Object Qfm0FunctionEleSpec",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FunctionEleSpec",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FunctionEleSpec"
    },
    {
      "createRelease": "Awp04.1.0",
      "description": "Interface Name for Business Object Qfm0FunctionElement",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FunctionElement",
      "namespace": "qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FunctionElement"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0MasterQualityObject",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0MasterQualityObject",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0MasterQualityObject"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0OptimizationAction",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0OptimizationAction",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0OptimizationAction"
    },
    {
      "createRelease": "Awp05.0.0",
      "description": "Interface Name for Business Object Qfm0Calling",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0Calling",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0Calling"
    },
    {
      "createRelease": "Awp05.2.0",
      "description": "Interface Name for Business Object Qfm0RiskEvaluation",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0RiskEvaluation",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0RiskEvaluation"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0SystemEleSpec",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0SystemEleSpec",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0SystemEleSpec"
    },
    {
      "createRelease": "Awp04.1.0",
      "description": "Interface Name for Business Object Qfm0SystemElement",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0SystemElement",
      "namespace": "qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0SystemElement"
    },
    {
      "createRelease": "Awp05.2.0",
      "description": "Interface Name for Business Object Qfm0VariantFMEAProvider",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0VariantFMEAProvider",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0VariantFMEAProvider"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0Cause",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0Cause",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0Cause"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0CauseEffectProvider",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0CauseEffectProvider",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0CauseEffectProvider"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0ControlAction",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0ControlAction",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0ControlAction"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0Effect",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0Effect",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0Effect"
    },
    {
      "createRelease": "Awp05.2.0",
      "description": "Interface Name for Business Object Qfm0FMEACompareContext",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEACompareContext",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEACompareContext"
    },
    {
      "createRelease": "Awp05.2.0",
      "description": "Interface Name for Business Object Qfm0FMEACompareInfo",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEACompareInfo",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEACompareInfo"
    },
    {
      "createRelease": "Awp04.2.0",
      "description": "Interface Name for Business Object Qfm0FMEADataProvider",
      "libraryName": "Qfm0qcfmea",
      "name": "Qfm0FMEADataProvider",
      "namespace": "Qfm0qcfmea",
      "primaryInterface": "true",
      "typeName": "Qfm0FMEADataProvider"
    }
  ],
  "Date": "Sun Mar 06 07:11:24 AM 2022",
  "Library": [
    {
      "DependentOn": [
        {
          "name": "metaframework"
        },
        {
          "name": "sa"
        },
        {
          "name": "tccore"
        },
        {
          "name": "tc"
        },
        {
          "name": "cxpom"
        },
        {
          "name": "Qfm0qcfmea"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "This library contains code related to Failure Mode Effect Analysis (FMEA) Realization from source structure.",
      "isThirdParty": "false",
      "name": "Qfm0FMEARealization",
      "namespace": "",
      "serviceLibrary": "false"
    },
    {
      "DependentOn": [
        {
          "name": "metaframework"
        },
        {
          "name": "sa"
        },
        {
          "name": "tccore"
        },
        {
          "name": "tc"
        },
        {
          "name": "cxpom"
        },
        {
          "name": "Qfm0qcfmea"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "This library provides functionality to support formsheet procssing in FMEA",
      "isThirdParty": "false",
      "name": "Qfm0FormSheet",
      "namespace": "",
      "serviceLibrary": "false"
    },
    {
      "createRelease": "Awp04.3.0",
      "description": "FMEA Manager service library.",
      "isThirdParty": "false",
      "name": "Qfm0SoaFmeaManager",
      "namespace": "Qfm0::Soa::FmeaManager",
      "serviceLibrary": "true"
    },
    {
      "DependentOn": [
        {
          "name": "metaframework"
        },
        {
          "name": "tccore"
        },
        {
          "name": "tc"
        },
        {
          "name": "cxpom"
        }
      ],
      "createRelease": "Awp04.1.0",
      "description": "This library contains code related to Quality Center Failure Mode Effect Analysis (FMEA) Business Objects.",
      "isThirdParty": "false",
      "name": "Qfm0qcfmea",
      "namespace": "",
      "serviceLibrary": "false"
    }
  ],
  "MetaEnum": [
    {
      "MetaEnumLiteral": [
        {
          "description": "",
          "name": "NoDifference"
        },
        {
          "description": "",
          "name": "OnlyInTarget"
        },
        {
          "description": "",
          "name": "MissingInTarget"
        },
        {
          "description": "",
          "name": "MetaModified"
        },
        {
          "description": "",
          "name": "StructureModified"
        },
        {
          "description": "",
          "name": "MetaAndStructureModified"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "An enumeration indicating object&rsquo;s difference, whether the object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified.",
      "isPublished": "false",
      "name": "ObjectDifference",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "MetaEnumLiteral": [
        {
          "description": "",
          "name": "DegreeOnly"
        },
        {
          "description": "",
          "name": "ExpandOnly"
        },
        {
          "description": "",
          "name": "ExpandAndDegree"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "The query mode enumeration.",
      "isPublished": "false",
      "name": "QueryModeEnum",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "MetaEnumLiteral": [
        {
          "description": "",
          "name": "ASC"
        },
        {
          "description": "",
          "name": "DESC"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "An enumeration indicating whether the sorting needs to be performed in ascending or descending order.",
      "isPublished": "false",
      "name": "SortDirection",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    }
  ],
  "Operation": [
    {
      "ParameterInfo": [
        {
          "description": "A list of AddCauseActionsInput structure which define the object to add Actions to Cause in context of Effect.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This operation creates and adds Actions (Qam0QualityAction) to given Cause (Qfm0FailureElement or Qc0Failure) in context of Effect (Qfm0FailureElement).",
      "exceptionCondition": "",
      "id": "addCauseActions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::AddCauseActionsInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FailureModeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "addCauseActions",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::addCauseActions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::AddCauseActionsInput>,&",
      "returnDescription": "Newly created relation (Qfm0ControlAction or Qfm0OptimizationAction) objects are returned in created objects of ServiceData. Any failure will be returned with the clientId mapped to the error message in the ServiceData. Error code can be one of the following:<br />397019: Invalid Cause Object &quot;%s&quot; provided.<br />397020: Invalid Effect Object &quot;%s&quot; provided.<br />35003: The provided Relation type &quot;%s&quot; is invalid.",
      "useCase": "Add Action to Cause.<br />Suppose we have &ldquo;Check Spark Plug&rdquo; Action (Qam0QualityAction), &ldquo;Spark Plug Not Working&rdquo; Cause (Qfm0FailureElement or Qc0Failure)  and &ldquo;Engine Not Starting&rdquo; Effect (Qfm0FailureElement).<br />This operation add &ldquo;Check Spark Plug&rdquo; Action to &ldquo;Spark Plug Not Working&rdquo; Cause (By holding cause reference) in context of &ldquo;Engine Not Starting&rdquo; Effect using Action relation (Qfm0ControlAction or Qfm0OptimizationAction)."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of input structures for add Causes and Effects.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This operation adds Causes(<b>Qfm0Cause</b>) and Effects(<b>Qfm0Effect</b>) to Failure Mode (<b>Qfm0FailureElement</b>) Object.<br />When user adds Failure(<b>Qfm0FailureElement</b> or <b>Qc0Failure</b>) as Cause or Effect to Failure Mode, by default that Failure Mode will because Effect or Cause to that Failure.",
      "exceptionCondition": "",
      "id": "addCausesAndEffects#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FailureModeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "addCausesAndEffects",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::addCausesAndEffects#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput>,&",
      "returnDescription": "The list of created relation objects. The following partial errors may be returned.<br />Partial Errors.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397012&nbsp;&nbsp;&nbsp;&nbsp;Failure Cause was not added as cause because it is already part of the failure hierarchy.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397013&nbsp;&nbsp;&nbsp;&nbsp;Failure Effect was not added as cause because it is already part of the failure hierarchy.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397014&nbsp;&nbsp;&nbsp;&nbsp;Failure Cause was not added because invalid Failure Mode provided. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397015&nbsp;&nbsp;&nbsp;&nbsp;Failure Effect was not added because invalid Failure Mode provided.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397016&nbsp;&nbsp;&nbsp;&nbsp;Adding Cause or Effect failed due to invalid relation Name provided.",
      "useCase": "<b>Use Case: Add Causes and Effects to Failure Mode.</b><br /><b>Example</b>: consider Failure Mode (<b>Qfm0FailureElement</b>) &quot;Engine is not starting&quot;.<br />We have potential cause Failure(<b>Qfm0FailureElement</b>) &quot;Fuel tank is empty&quot;.<br />When user adds &quot;Fuel tank is empty&quot; as cause to &quot;Engine is not starting&quot;.<br />&quot;Engine is not starting&quot; is an effect of failure &quot;Fuel tank is empty&quot;."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of Input structures containing information to creates a Variant FMEA structures.",
          "parameterName": "inputs"
        },
        {
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "parameterName": "runInBackground"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation creates a Variant Failure Mode Effect Analysis (FMEA) structure for a given Master FMEA structure. It creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) as top object and under it create System Element (<b>Qfm0SystemElement</b>), Function Element (<b>Qfm0FunctionElement</b>), Failure Element (<b>Qfm0FailureElement</b>), Cause (<b>Qfm0Cause</b>), Effect (<b>Qfm0Effect</b>), Quality Action (<b>Qam0QualityAction</b>) objects corresponding to objects from Master FMEA structure.<br />In case of background mode, this operation files an asynchronous request to creates a Variant FMEA structure for a given Master FMEA structure and releases the client immediately so that the user can perform other operation.",
      "exceptionCondition": "",
      "id": "createVariantFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput>,&$bool",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "createVariantFMEAStructure",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::createVariantFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput>,&$bool",
      "returnDescription": "The newly created Variant FMEA structure objects are returned in the created list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br /><br />Following partial error may be returned:<br />397069 The given FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397070 The Variant FMEA was not created as given FMEA Element list is invalid.<br />397071 The Variant FMEA was not created as input FMEA is not a Master FMEA.<br />397072 The Variant FMEA was not created as given FMEA Element is not a part of given Master FMEA.<br />397073 The Variant FMEA was not created as given list of objects not released.<br />397074 The given FMEA root Node is not Latest Released.<br />397075 The given FMEA root Node is not Released.",
      "useCase": "Creates a Variant FMEA structure for a given Master FMEA structure.<br />We have a Master FMEA structure.<br /><br />Car (<b>Qfm0FMEANode</b>)<br />  |<br />  |- Wheel (<b>Qfm0SystemElement</b>)<br />  |<br />  |- Engine (<b>Qfm0SystemElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |- Chemical Energy converted into Mechanical Energy (<b>Qfm0FunctionElement</b>)&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|- Engine does not start (<b>Qfm0FailureElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |- No fuel in tank (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |- Add fuel in tank (<b>Qam0QualityAction</b>)<br /><br />Now we want to create Variant FMEA structure with &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) along with its underline objects (<b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qfm0Cause</b>, <b>Qfm0Effect</b>, <b>Qam0QualityAction</b>). <br />To achieve this, for this operation need to pass &ldquo;Car&rdquo; Master FMEA Root Node (<b>Qfm0FMEANode</b>) object with &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>).<br />This operation will creates following Variant FMEA structure. <br /><br />Car (<b>Qfm0FMEANode</b>)<br />  |<br />  |- Engine (<b>Qfm0SystemElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |- Chemical Energy converted into Mechanical Energy (<b>Qfm0FunctionElement</b>)&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|- Engine does not start (<b>Qfm0FailureElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |- No fuel in tank (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |- Add fuel in tank (<b>Qam0QualityAction</b>)"
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of Input structures containing information to creates a Variant FMEA structures.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation creates a Variant Failure Mode Effect Analysis (FMEA) structure for a given Master FMEA structure. It creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) as top object and under it create System Element (<b>Qfm0SystemElement</b>), Function Element (<b>Qfm0FunctionElement</b>), Failure Element (<b>Qfm0FailureElement</b>), Cause (<b>Qfm0Cause</b>), Effect (<b>Qfm0Effect</b>), Quality Action (<b>Qam0QualityAction</b>) objects corresponding to objects from Master FMEA structure.<br />This operation always runs asynchronously in its own server in the background.",
      "exceptionCondition": "",
      "id": "createVariantFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "createVariantFMEAStructureAsync",
      "opTemplate": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::createVariantFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput>,&",
      "returnDescription": "None.",
      "useCase": "Creates a Variant FMEA structure for a given Master FMEA structure.<br />We have a Master FMEA structure.<br /><br />Car (<b>Qfm0FMEANode</b>)<br />  |<br />  |- Wheel (<b>Qfm0SystemElement</b>)<br />  |<br />  |- Engine (<b>Qfm0SystemElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |- Chemical Energy converted into Mechanical Energy (<b>Qfm0FunctionElement</b>)&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|- Engine does not start (<b>Qfm0FailureElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |- No fuel in tank (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |- Add fuel in tank (<b>Qam0QualityAction</b>)<br /><br />Now we want to create Variant FMEA structure with &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) along with its underline objects (<b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qfm0Cause</b>, <b>Qfm0Effect</b>, <b>Qam0QualityAction</b>). <br />To achieve this, for this operation need to pass &ldquo;Car&rdquo; Master FMEA Root Node (Qfm0FMEANode) object with &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>).<br />This operation will creates following Variant FMEA structure. <br /><br />Car (<b>Qfm0FMEANode</b>)<br />  |<br />  |- Engine (<b>Qfm0SystemElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |- Chemical Energy converted into Mechanical Energy (<b>Qfm0FunctionElement</b>)&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|- Engine does not start (<b>Qfm0FailureElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |- No fuel in tank (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |- Add fuel in tank (<b>Qam0QualityAction</b>)"
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure holds the data required to generate FMEA structure from Item structure. Input contains Source object, Configuration information, Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) information.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation generates a Failure Mode Effect analysis (FMEA) structure for a given Item structure. It creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and under it create System Element (<b>Qfm0SystemElement</b>) for every Item Revision which is appear in Item structure in context of configuration applied on it.",
      "exceptionCondition": "",
      "id": "generateFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "generateFMEAStructure",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::generateFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureInput,&",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;GenerateFMEAStructureResponse:  The Output structure give the Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and the created FMEA objects which are in the created objects list of the ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397033 : The source object is invalid. The supported types are: &quot;<b>ItemRevision</b>&quot;, &quot;<b>BOMLine</b>&quot; and &quot;<b>Awb0Element</b>&quot;.<br />397038 : The product context is invalid. The supported type is &quot;<b>Awb0ProductContextInfo</b>&quot; object.<br />397039 : The provided input is invalid to create Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object.",
      "useCase": "Generate FMEA structure for a given Part structure.<br />We have Part structure, now we want to create FMEA structure in which Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) Object is a top element.<br />This operation creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and under it create System Element (<b>Qfm0SystemElement</b>) for every Part Revision which is appear in Part structure in context of configuration applied on it."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure for generating form sheet printable report. Input contains Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) and output file format.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation generates printable form sheet report from given Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>). The generated report is saved in the FMS transient volume and an FMS ticket is returned.",
      "exceptionCondition": "",
      "id": "generateFormSheetPrintReports#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "generateFormSheetPrintReports",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::generateFormSheetPrintReports#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportInput,&",
      "returnDescription": "The Output structure containing list of TransientFileTicketInfo objects for retrieving generated report file. A TransientFileTicketInfo object contains the file name, the transient ticket information for the generated report file and service data.<br /><br />Following error codes are returned in the ServiceData. <br />397025: The source FMEA Object is invalid, supported types are <b>Qfm0FMEANode</b> or <b>Qfm0SystemElement</b>. <br />397034: The Given Report format is invalid, supported formats are HTML, PDF and MSExcel.",
      "useCase": "User can generate form sheet printable report file only by selecting Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) objects and report format type. Generated report will be available for download from FMS."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure containing information to get FMEA structure compare result.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation provides a compares result of target Failure Mode Effect Analysis (FMEA) structure with respective to source FMEA structure, this compare result used to show difference of target FMEA Structure with source FMEA Structure.<br />In compare result, this operation provides focus object&rsquo;s underline objects which are only exists in target structure, missing in target structure, whose meta data modified, whose underline structure modified or whose meta data along with its underline structure modified with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.<br />This operation allows the caller to send the search input, and sorting data to get compare result according it and it also support pagination.",
      "exceptionCondition": "",
      "id": "getFMEAStructureCompareResult#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getFMEAStructureCompareResult",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getFMEAStructureCompareResult#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput,&",
      "returnDescription": "The Output structure containing compare result of target FMEA structure with respective to source FMEA structure.<br /><br />Following partial errors may be in the ServiceData.<br />397079 The given source context FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397080 The given target context FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397081 The given focus object is invalid, is not a part of source or target FMEA structure.<br />397082 Invalid value specified for &ldquo;OBJECT_TYPE&rdquo; key in search criteria, specified object class does not exist.",
      "useCase": "Get a compares result of Variant FMEA structure with respective to Master FMEA structure from which this Variant FMEA structure has created.<br />We have a Variant FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects which created from Master FMEA structure, after creation of Variant FMEA structure from Master FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Master FMEA structure.<br />Now we want to get a compare result of this Variant FMEA structure with respective to this Master FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Master FMEA structure and target FMEA structure as Variant FMEA structure with focus object as FMEA Root Node (<b>Qfm0FMEANode</b>) of Variant FMEA structure.<br />This operation provides &ldquo;Wheel&rdquo; and &ldquo;Petrol Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects with compare result type as &ldquo;OnlyInTarget&rdquo; and &ldquo;MetaModified&rdquo; respectively to show difference of Variant FMEA Structure with Master FMEA Structure."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure containing information to get FMEA structure compare result.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp06.1.0",
      "dependencies": "",
      "description": "This operation returns the compare results of target Failure Mode Effect Analysis (FMEA) structure with respective to source FMEA structure, this compare result is used to show difference of target FMEA Structure with source FMEA Structure.<br />In compare result, this operation returns the child objects which are not aligned with target structure along with compare verdict like &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;.<br />This operation allows the caller to send the search input, and sorting data to get compare result according it and it also support pagination.",
      "exceptionCondition": "",
      "id": "getFMEAStructureCompareResult2#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getFMEAStructureCompareResult2",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::FMEAStructureCompareResultResponse2#Qfm0::Soa::FmeaManager::FMEADataManagement::getFMEAStructureCompareResult2#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput,&",
      "returnDescription": "The compare result of target FMEA structure with respective to source FMEA structure.<br /><br />Following partial errors may be returned.<br />397079 The given source context FMEA Root Node is not of a type &quot;Qfm0FMEANode&quot;.<br />397080 The given target context FMEA Root Node is not of a type &quot;Qfm0FMEANode&quot;.<br />397081 The given focus object is invalid, is not a part of source or target FMEA structure.<br />397082 Invalid value specified for &ldquo;OBJECT_TYPE&rdquo; key in search criteria, specified object class does not exist.",
      "useCase": "Get a compares result of Variant FMEA structure with respective to Master FMEA structure from which this Variant FMEA structure has created.<br />We have a Variant FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects which created from Master FMEA structure, after creation of Variant FMEA structure from Master FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Master FMEA structure.<br />Now we want to get a compare result of this Variant FMEA structure with respective to this Master FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Master FMEA structure and target FMEA structure as Variant FMEA structure with focus object as FMEA Root Node (<b>Qfm0FMEANode</b>) of Variant FMEA structure.<br />This operation returns &ldquo;Wheel&rdquo; and &ldquo;Petrol Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects with compare result type as &ldquo;OnlyInTarget&rdquo; and &ldquo;MetaModified&rdquo; respectively to show difference of Variant FMEA Structure with Master FMEA Structure."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure for getting data required to view FMEA form sheet. Input contains Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>), cursor information and sort criteria.",
          "parameterName": "inputData"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This operation retrieves data required to view Failure Mode Effect Analysis(FMEA) form sheet based on given Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>), cursor information and sort criteria. Form sheet header contain information of Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) object and each row of form sheet includes System Element(<b>Qfm0SystemElement</b>), Function Element(<b>Qfm0FunctionElement</b>), Failure Effect(<b>Qfm0FailureElement</b>/<b>Qc0Failure</b>), Severity, Failure Mode(<b>Qfm0FailureElement</b>), Failure Cause(<b>Qfm0FailureElement</b>/<b>Qc0Failure</b>), Current Prevention Control Action(<b>Qam0QualityAction</b>), Occurrence, Current Detection Control Action(<b>Qam0QualityAction</b>), Detection, Initial Action Priority, Optimization Prevention Action(<b>Qam0QualityAction</b>), Occurrence, Optimization Detection Action(<b>Qam0QualityAction</b>), Detection, Final Action Priority, Characteristics.",
      "exceptionCondition": "",
      "id": "getFormSheetData#const,Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getFormSheetData",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getFormSheetData#const,Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetInput,&",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;FormSheetResponse:  The information required for rendering FMEA form sheet in Active workspace client. It includes Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) Object, list of form sheet rows data, cursor information, and sort criteria .<br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;The following partial errors may be returned:<br />397025: The source fmeaObject  is invalid, Supported types are <b>Qfm0FMEANode</b> or  <b>Qfm0SystemElement</b>. <br />397026: The source <b>Qfm0SystemElement</b>  does not have parent of type <b>Qfm0FMEANode</b>.",
      "useCase": "1<b>. </b>Show Form Sheet of given Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) Object.<br />We have complete structure of FMEA in which Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) Object is a top element.<br />Now we want to see the its form sheet view. <br />This operation will provide required data(This has specified in above operation description)  for generating/rendering form sheet view for whole FMEA structure. <br /><br />2. Show Form Sheet of given System Element(<b>Qfm0SystemElement</b>) Object.<br />We have complete structure of FMEA in which System Element (<b>Qfm0SystemElement</b>) is a child of Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) Object.<br />Now we want to see the form sheet view of given System Element (<b>Qfm0SystemElement</b>) Object.<br />This operation will provide required data(This has specified in above operation description) for generating/rendering form sheet view for given System Element (<b>Qfm0SystemElement</b>) Object."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure for getting data required to view FMEA form sheet. Input contains Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) and cursor information.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation retrieves data required to view Failure Mode Effect Analysis (FMEA) form sheet based on given Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) and cursor. Form sheet header contain information of Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and each row of form sheet includes data based on configuration file attached to FMEA Guideline (<b>Qfm0FMEAGuideline</b>) Object. which is attached to Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object.",
      "exceptionCondition": "",
      "id": "getFormSheetData2#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetInput2,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getFormSheetData2",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetResponse2#Qfm0::Soa::FmeaManager::FMEADataManagement::getFormSheetData2#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetInput2,&",
      "returnDescription": "The information required for rendering FMEA form sheet in Active workspace client. This includes a form sheet header in HTML format, form sheet column, data and cursor information in custom JSON format as specified in FormSheetResponse2 structure and Service Data containing plain object and error codes if any.<br /><br />Following error codes are returned in the ServiceData. <br />397025: The source FMEA Object is invalid, supported types are <b>Qfm0FMEANode</b> or <b>Qfm0SystemElement</b>.",
      "useCase": "1. Display Form Sheet of given Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) Object. We have complete structure of FMEA in which Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) Object is a top element. Now we want to see the form sheet view. This operation provides required data (This has specified in above operation description) for generating/rendering form sheet view for whole FMEA structure.<br /><br />2. Display Form Sheet of given System Element (<b>Qfm0SystemElement</b>) Object. We have complete structure of FMEA in which System Element (<b>Qfm0SystemElement</b>) is a child of Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) Object. Now we want to see the form sheet view of given System Element (<b>Qfm0SystemElement</b>) Object. This operation provides required data (This has specified in above operation description) for generating/rendering form sheet view for given System Element (<b>Qfm0SystemElement</b>) Object."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure for getting data required for net view. Input contains FMEA objects, view name, query mode and inquiry information.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.1.0",
      "dependencies": "",
      "description": "This operation retrieves data required to view Failure Mode Effect Analysis (FMEA) Net Views based on given FMEA objects, view name, query mode and cursor. In net view nodes are FMEA objects, the relation between returned objects and given objects may be relation (GRM) or reference property. The data provided by this operation used for rendering net view (combination of structure and tree graph) on client.",
      "exceptionCondition": "",
      "id": "getNetViewData#const,Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getNetViewData",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getNetViewData#const,Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewInput,&",
      "returnDescription": "The information required for rendering FMEA net view in Active workspace client. It includes node, edge information and properties of net view group information and service data.<br /><br />Following partial errors may be returned: <br /><br />397056: Not all selected objects support net view.<br />397057: The requested view is not supported for given objects.<br />397058: The given expansion direction is not supported in net view. <br />397059: The given expansion type is not supported in net view.",
      "useCase": "1. Display system Net View of given System Representation (<b>Qfm0SystemElement</b>) Object.<br />FMEA structure contains System Representation (<b>Qfm0SystemElement</b>) as part of FMEA tree. <br />Net view contains system analysis (Parent child structure) in tree graph and related Functions, Failures.<br />This operation provides required data (This has specified in above operation description) for generating/rendering system net view for selected System Representation (<b>Qfm0SystemElement</b>). <br /><br />2. Display function Net View of given Function Representation (<b>Qfm0FunctionElement</b>) Object.<br />FMEA structure contains Function Representation (<b>Qfm0FunctionElement</b>) as part of FMEA tree. <br />Now user want to see the function net view. This view contains function analysis (next higher/lower level functions) in tree graph and related Failures.<br />This operation provides required data (This has specified in above operation description) for generating/rendering function net view for selected Function Representation (<b>Qfm0FunctionElement</b>). <br /><br />3. Display failure Net View of given Failure Representation (<b>Qfm0FailureElement</b>) Object.<br />FMEA structure contains Failure Representation (<b>Qfm0FailureElement</b>) as part of FMEA tree. <br />Net view contains failure analysis (causes/effects) in tree graph and related Actions.<br />This operation provides required data (This has specified in above operation description) for generating/rendering failure net view for selected Failure Representation (<b>Qfm0FailureElement</b>)."
    },
    {
      "ParameterInfo": [
        {
          "description": "The input structure for getting data required for displaying Process Flow Chart. Input contains FMEA Objects, view name and query mode.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp06.1.0",
      "dependencies": "",
      "description": "This operation retrieves data required to view Process Flow Diagram based on selected System Element Representation ( Qfm0SystemElement), view name, and query mode.. In Process Flow Chart nodes are System Element Representation of type &ldquo;Process&rdquo;. The data provided by this operation is used for rendering Process Flow Chart oin Active Workspace client for selected System Element Representation. (Qfm0SystemElement)",
      "exceptionCondition": "",
      "id": "getProcessFlowChartData#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getProcessFlowChartData",
      "opTemplate": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getProcessFlowChartData#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartInput,&",
      "returnDescription": "The information required for rendering Process Flow Chart for selected System Element Representation (Qfm0SystemElement) in Active workspace client. It includes node, edge information and properties of process flow chart group information.<br /><br />Following partial errors may be returned:<br />397098: Process Flow Chart is not supported for selected object.",
      "useCase": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;Display Process Flow Chart for given System Element Representation (Qfm0SystemElement) Object.<br /><br />FMEA structure contains System Element Representation (Qfm0SystemElement) as part of FMEA tree.<br />Process Flow Chart contains Nodes which are representation of System Element Representation of type &ldquo;Process&rdquo; in graph. This operation provides required data (This has specified in above operation description) for generating/rendering Process Flow Chart for selected System Element Representation (Qfm0SystemElement)."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure hold the data required to add Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation adds Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object. <br />When user adds Higher Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object, then Focus Element Function object will be the Lower Level Function of these Function objects similar things will happen while adding Lower Level Functions.",
      "exceptionCondition": "",
      "id": "addHigherLowerLevelFunctions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "addHigherLowerLevelFunctions",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::addHigherLowerLevelFunctions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput>,&",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;serviceData:  The list of created relation objects are added into the created list of ServiceData. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397058: Higher or Lower Level Function was not removed because invalid Focus Element Function provided. The supported type is &quot;<b>Qfm0FunctionElement</b>&quot; object.<br />397059: Higher or Lower Level Function was not removed because invalid relation name provided. The supported types are: &quot;<b>Qfm0Calling</b>&quot;, and &quot;<b>Qfm0CalledBy</b>&quot;.",
      "useCase": "<b>Use Case.1:</b> Add Higher Level Functions to Focus Element Function in Car FMEA.<br />Consider Focus Element Function is &quot;Filter and clean outside air&quot;.<br />To this Focus Element Function User can add following Higher Level Functions.<br />1.&nbsp;&nbsp;&nbsp;&nbsp;Provide clean air to engine.<br />2.&nbsp;&nbsp;&nbsp;&nbsp;Provide compressed air to engine.<br />Higher Level Functions added Focus Element Function using <b>Qfm0CalledBy</b> relation, from client side this relation name, Focus Element Function and Functions given as input to build Higher Level relation between them.<br />Once user adds above functions as Higher Level Functions then this Focus Element Function will be the Lower Level Functions for these functions.<br /><br /><b>Use Case.2:</b> Add Lower Level Functions to Focus Element Function in Pen FMEA.<br />Consider Focus Element Function is &quot;Provide Smooth, comfortable rubber grip&quot;.<br />To this Focus Element Function user can add following Lower Level Functions.<br />1.&nbsp;&nbsp;&nbsp;&nbsp;The rubber grip fit a tip portion. <br />Lower Level Functions added Focus Element Function using <b>Qfm0Calling</b> relation, from client side this relation name, Focus Element Function and Functions given as input to build Lower Level relation between them.<br />Once user adds above function as Lower Level Function then this Focus Element Function will be the Higher Level Function for these function."
    },
    {
      "ParameterInfo": [
        {
          "description": "A map (string, list of strings) of FMEA guideline object (Qfm0FMEAGuideline) UID and the list of MSR file tickets.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation imports Monitoring and System Response (MSR) formatted XML files for Failure Mode Effect Analysis (FMEA) and creates FMEA objects as a result of successful import. Filet ticket information of the MSR files and corresponding FMEA guidelines information are given as input to this operation and output is the newly created FMEA objects as result of successful import. This operation requires mapping file name to pe picked up from the Preference &ndash; Qfm0MSRToPLMXMLMappingFile.",
      "exceptionCondition": "",
      "id": "importFmeaFromMSR#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::ImportFmeaInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "importFmeaFromMSR",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaFromMSR#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::ImportFmeaInput,&",
      "returnDescription": "The created Failure Mode Effect Analysis Root Node objects (Qfm0FMEANode) are returned in the created list of ServiceData.<br /><br />The following partial errors may be returned: <br />397062: File was not imported because it is not a valid MSR format.<br />397063: Given UID of FMEA Guideline object is not valid.",
      "useCase": "1. Creating FMEA using FMEA Guideline object and file ticket of the input MSR file which is uploaded to a transient volume."
    },
    {
      "ParameterInfo": [
        {
          "description": "A map (string, list of strings) of FMEA guideline object (<b>Qfm0FMEAGuideline</b>) UID and the list of MSR file tickets.",
          "parameterName": "input"
        },
        {
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "parameterName": "runInBackground"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp06.1.0",
      "dependencies": "",
      "description": "This operation imports Monitoring and System Response (MSR) formatted XML files for Failure Mode Effect Analysis (FMEA) and creates <b>Qfm0FMEANode</b>, <b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qfm0SystemEleSpec</b>, <b>Qfm0FunctionEleSpec</b>, <b>Qc0Failure</b>, <b>Aqc0CharElement</b>, <b>Qfm0CalledBy</b>, <b>Qfm0Calling</b>, <b>Qfm0Cause</b>, <b>Qfm0ControlAction</b>, <b>Qfm0Effect</b>, <b>Qfm0FunctionRequirement</b>, <b>Qfm0InspectionDefinition</b>, <b>Qfm0OptimizationAction</b>, <b>Qam0QualityAction</b> objects because of successful import. File ticket information of the MSR files and corresponding FMEA guidelines (<b>Qfm0FMEAGuideline</b>) information are given as input to this operation. This operation requires mapping file name to be provided in Preference: &ldquo;Qfm0MSRToPLMXMLMappingFile&rdquo;.",
      "exceptionCondition": "",
      "id": "importFmeaMSRXML#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput,&$bool",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "importFmeaMSRXML",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaMSRXML#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput,&$bool",
      "returnDescription": "The created Failure Mode Effect Analysis Root Node object (<b>Qfm0FMEANode</b>) are returned in the created list of ServiceData.       <br /><br />The following partial errors may be returned: <br />397062: File was not imported because it is not a valid MSR format.<br />397063: Given UID of FMEA Guideline object is not valid.",
      "useCase": "1. Creating FMEA using FMEA Guideline object and file ticket of the input MSR file which is uploaded to a transient volume.<br /><br />2. Bulk MSR FMEA XML import. We can import multiple MSR files at once. We need to provide all file tickets which are uploaded to a transient volume along with FMEA Guideline object&rsquo;s UID.<br />Example: We want to import 6 MSR XML files. 5 design FMEAs of &ldquo;AIAG &amp; VDA - Design FMEA&rdquo; standard and 1 process FMEA of &ldquo;AIAG &amp; VDA - Process FMEA&rdquo; standard. We can provide input as following.<br />input: {<br />  {&lt;UID of AIAG &amp; VDA - Design FMEA Guideline object&gt;, <br />    {&lt;list of all 5 file tickets of design FMEAs comma separated&gt;}<br />  },<br />  {&lt;UID of AIAG &amp; VDA - Process FMEA Guideline object&gt;,<br />    {&lt;file ticket of process FMEAs comma separated&gt;}<br />  }<br />}<br />All FMEAs from 6 MSR files will be imported."
    },
    {
      "ParameterInfo": [
        {
          "description": "A map (string, list of strings) of FMEA guideline object (<b>Qfm0FMEAGuideline</b>) UID and the list of MSR file tickets.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp06.1.0",
      "dependencies": "",
      "description": "This operation imports Monitoring and System Response (MSR) formatted XML files for Failure Mode Effect Analysis (FMEA) and creates: <b>Qfm0FMEANode</b>, <b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qfm0SystemEleSpec</b>, <b>Qfm0FunctionEleSpec</b>, <b>Qc0Failure</b>, <b>Aqc0CharElement</b>, <b>Qfm0CalledBy</b>, <b>Qfm0Calling</b>, <b>Qfm0Cause</b>, <b>Qfm0ControlAction</b>, <b>Qfm0Effect</b>, <b>Qfm0FunctionRequirement</b>, <b>Qfm0InspectionDefinition</b>, <b>Qfm0OptimizationAction</b>, <b>Qam0QualityAction</b> objects because of successful import. File ticket information of the MSR files and corresponding FMEA guidelines (<b>Qfm0FMEAGuideline</b>) information are given as input to this operation. This operation requires mapping file name to be provided in Preference: &ldquo;Qfm0MSRToPLMXMLMappingFile&rdquo;. This operation always runs asynchronously in its own server in the background.",
      "exceptionCondition": "",
      "id": "importFmeaMSRXMLAsync#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "importFmeaMSRXMLAsync",
      "opTemplate": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaMSRXMLAsync#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput,&",
      "returnDescription": "None.",
      "useCase": "1. Creating FMEA using FMEA Guideline object and file ticket of the input MSR file which is uploaded to a transient volume.<br /><br />2. Bulk MSR FMEA XML import. We can import multiple MSR files at once. We need to provide all file tickets which are uploaded to a transient volume along with FMEA Guideline object&rsquo;s UID.<br />Example: We want to import 6 MSR XML files. 5 design FMEAs of &ldquo;AIAG &amp; VDA - Design FMEA&rdquo; standard and 1 process FMEA of &ldquo;AIAG &amp; VDA - Process FMEA&rdquo; standard. We can provide input as following.<br />input: {<br />  {&lt;UID of AIAG &amp; VDA - Design FMEA Guideline object&gt;, <br />    {&lt;list of all 5 file tickets of design FMEAs comma separated&gt;}<br />  },<br />  {&lt;UID of AIAG &amp; VDA - Process FMEA Guideline object&gt;,<br />    {&lt;file ticket of process FMEAs comma separated&gt;}<br />  }<br />}<br />All FMEAs from 6 MSR files will be imported."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure for hold the data required to rebase FMEA structure. Input contains Source Item structure Information and Target System Element.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation rebases a Failure Mode Effect analysis (FMEA) structure to the given Item structure in context of configuration applied on it. It also saves <b>Awb0ProductContextInfo</b> object associated with the Item Structure, with FMEA structure. A FMEA structure can be rebased to a different revision of the Item than the existing.",
      "exceptionCondition": "",
      "id": "rebaseFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::RebaseFMEAStructureInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "rebaseFMEAStructure",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::rebaseFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::RebaseFMEAStructureInput,&",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;ServiceData:  Created System Element (<b>Qfm0SystemElement</b>) are added in the created list and Updated System Element (<b>Qfm0SystemElement</b>) are added in the updated list of ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397033 : The source object is invalid. The supported types are: &quot;<b>ItemRevision</b>&quot;, &quot;<b>BOMLine</b>&quot; and &quot;<b>Awb0Element</b>&quot;.<br />397034 : The target system element is invalid. The supported type is &quot;<b>Qfm0SystemElement</b>&quot; object.<br />397035 : The target system element is not associated with the source structure.<br />397036 : The target system element is not associated with the source object.<br />397037 : The target system element is associated with multiple source structures.<br />397038 : The product context is invalid. The supported type is &quot;<b>Awb0ProductContextInfo</b>&quot; object.",
      "useCase": "Rebase existing FMEA structure for the configuration which is applied on given Part structure.<br />We have FMEA structure which created using Part structure in context of configuration C1, now we want to rebase with same Part structure but in context of different configuration C2.<br />This operation creates a System Element (<b>Qfm0SystemElement</b>) for every Part Revision which was not appear in Part structure in context of configuration C1 and hide existing System Element (<b>Qfm0SystemElement</b>) associated with Part Revision which was not appear in Part structure in context of configuration C2."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of RemoveCauseActionsInput structure define the object to remove Actions which has attached Cause.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This operation remove Actions (Qam0QualityAction) which has added to cause by relation (Qfm0ControlAction or Qfm0OptimizationAction) in context of Effect (Qfm0FailureElement).",
      "exceptionCondition": "",
      "id": "removeCauseActions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::RemoveCauseActionsInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FailureModeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "removeCauseActions",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::removeCauseActions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::RemoveCauseActionsInput>,&",
      "returnDescription": "Deleted Action (Qam0QualityAction) objects are returned in deleted objects list of ServiceData. Any failure will be returned with the clientId mapped to the error message in the ServiceData. Error code can be one of the following:<br />397019: Invalid Cause Object &quot;%s&quot; provided.<br />397020: Invalid Effect Object &quot;%s&quot; provided.<br />397021: Invalid Action Object &quot;%s&quot; provided.<br />35003: The provided Relation type &quot;%s&quot; is invalid.",
      "useCase": "Remove Action from Cause.<br />Suppose we have &ldquo;Check Spark Plug&rdquo; Action (Qam0QualityAction)  added to &ldquo;Spark Plug Not Working&rdquo; Cause (Qfm0FailureElement or Qc0Failure) in context of &ldquo;Engine Not Starting&rdquo; Effect (Qfm0FailureElement).<br />This operation remove link between &ldquo;Check Spark Plug&rdquo; Action and &ldquo;Spark Plug Not Working&rdquo;  Cause and finally delete &ldquo;Check Spark Plug&rdquo; Action."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of input structures for remove Causes and Effects.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This operation removes Causes (<b>Qfm0Cause</b>) and Effects (<b>Qfm0Effect</b>) from Failure Mode (<b>Qfm0FailureElement</b>) Object.<br />When user removes Failure (<b>Qfm0FailureElement</b> or <b>Qc0Failure</b>) Cause or Effect from Failure Mode, it is related Effect or Cause will be removed.",
      "exceptionCondition": "",
      "id": "removeCausesAndEffects#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FailureModeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "removeCausesAndEffects",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::removeCausesAndEffects#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput>,&",
      "returnDescription": "The list of deleted objects. The following partial errors may be returned.<br />Partial Errors:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Failure Cause was not removed because there are actions associated with it.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove Failure Cause and Effect Failed due to invalid Failure Object provided. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove Failure Cause and Effect Failed due to invalid relation name provided.",
      "useCase": "<b>Use Case: Remove Causes and Effects from Failure Mode.</b><br />Example: consider Failure Mode (<b>Qfm0FailureElement</b>) &quot;Engine is not starting&quot;.<br />We have potential cause Failure(<b>Qfm0FailureElement</b>) &quot;Fuel tank is empty&quot;.<br />Then &quot;Engine is not starting&quot; is an effect of failure &quot;Fuel tank is empty&quot;. <br />When user remove cause &quot;Fuel tank is empty&quot; from &quot;Engine is not starting&quot;.<br />&quot;Engine is not starting&quot; is also removed as Effect from &quot;Fuel tank is empty&quot;.<br />Also if user removes cause, related cause will be removed."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure hold the data required to remove Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects from Focus Element Function (<b>Qfm0FunctionElement</b>) object.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation removes Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects from Focus Element Function (<b>Qfm0FunctionElement</b>) objects. <br />When user removes Higher Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects from Focus Element Function (<b>Qfm0FunctionElement</b>) objects, then Focus Element Function object will be no longer Lower Level Function of these Function objects similar things will happen while deleting Lower Level Functions.",
      "exceptionCondition": "",
      "id": "removeHigherLowerLevelFunctions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "removeHigherLowerLevelFunctions",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::removeHigherLowerLevelFunctions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput>,&",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;serviceData:  The list of deleted relation objects are added into the deleted list of ServiceData. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397051: Function was not added as lower level function because it is already part of the function hierarchy.<br />397052: Function was not added as higher level function because it is already part of the function hierarchy.<br />397053: Lower level function was not added because invalid focus element function provided. The supported type is &quot;<b>Qfm0FunctionElement</b>&quot; object.<br />397054: Higher Level function was not added because invalid focus element function provided. The supported type is &quot;<b>Qfm0FunctionElement</b>&quot; object. <br />397055: Adding Higher or Lower Level Function failed due to invalid relation name provided. The supported types are: &quot;<b>Qfm0Calling</b>&quot; or &quot;<b>Qfm0CalledBy</b>&quot;.",
      "useCase": "<b>Use Case.1:</b> Remove Higher Level Functions from Focus Element Function in Car FMEA.<br />Consider Focus Element Function is &quot;Filter and clean outside air&quot; with following two Higher Level Functions.<br />1.&nbsp;&nbsp;&nbsp;&nbsp;Provide clean air to engine.<br />2.&nbsp;&nbsp;&nbsp;&nbsp;Provide compressed air to engine.<br />Higher Level Functions added Focus Element Function using Qfm0CalledBy relation, from client side this relation name, Focus Element Function and Functions given as input to remove Higher Level relation between them.<br />User can remove these functions from Focus Element Function, once user remove it then this Focus Element Function will be no longer Lower Level Function of these Function objects.<br /><br /><b>Use Case.2:</b> Remove Lower Level Functions from Focus Element Function in Car FMEA.<br />Consider Focus Element Function is &quot; Provide clean air to engine&quot; with following two Lower Level Functions.<br />1.&nbsp;&nbsp;&nbsp;&nbsp;Filter and clean outside air.<br />2.&nbsp;&nbsp;&nbsp;&nbsp;Reduce your heating.<br />Lower Level Functions added Focus Element Function using Qfm0Calling relation, from client side this relation name, Focus Element Function and Functions given as input to remove Lower Level relation between them.<br />User can remove these functions from Focus Element Function, once user remove it then this Focus Element Function will be no longer Higher Level Function of these Function objects."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of Input structures containing information to align FMEA structures.",
          "parameterName": "inputs"
        },
        {
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "parameterName": "runInBackground"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation aligns a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa. <br />This operation updates target FMEA structure objects as per changes occurring in corresponding objects of a source FMEA structure, it also adds objects into target FMEA structure corresponding to the newly added objects into source FMEA structure and deletes objects from target FMEA structure corresponding to the deleted objects from source FMEA structure.<br />This operation considers only given list of objects (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) to adds, deletes or updates to or from target FMEA structure. <br />In case of background mode, this operation files an asynchronous request to aligns a FMEA structure with another FMEA structure and releases the client immediately so that the user can perform other operation.",
      "exceptionCondition": "",
      "id": "alignFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput>,&$bool",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "alignFMEAStructure",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::alignFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput>,&$bool",
      "returnDescription": "The newly created FMEA structure objects are returned in the created list and updated objects are returned in the updated list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />Following partial error may be returned:&nbsp;&nbsp;&nbsp;&nbsp;<br />397076 The given target FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397077 The given source FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397078 The selected object is invalid, is not a part of source or target FMEA structure.",
      "useCase": "<b>Use Case.1:</b> Align a Variant FMEA structure with Master FMEA structure from which this Variant FMEA structure has created.<br />We have a Variant FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects which created from Master FMEA structure, after creation of Variant FMEA structure from Master FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>)  to &ldquo;Petrol Engine&rdquo; of Master FMEA structure.<br />Now we want to align this Variant FMEA structure with this Master FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Master FMEA structure and target FMEA structure as Variant FMEA structure and &ldquo;Wheel&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects into selected object list.<br />This operation adds &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and rename &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object to &ldquo;Petrol Engine&rdquo; of Variant FMEA structure.<br /><br /><b>Use Case.2:</b> Align a Master FMEA structure with Variant FMEA structure which is created from this Master FMEA structure.<br />We have a Master FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects from which Variant FMEA structure has created, after creation of Variant FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo;  System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Variant FMEA structure.<br />Now we want to align this Master FMEA structure with this Variant FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Variant FMEA structure and target FMEA structure as Master FMEA structure and &ldquo;Wheel&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects into selected object list.<br />This operation adds &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and rename &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object to &ldquo;Petrol Engine&rdquo; of Master FMEA structure."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of structures containing information to align FMEA structures.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation aligns a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa. <br />This operation updates target FMEA structure objects as per changes occurring in corresponding objects of a source FMEA structure, it also adds objects into target FMEA structure corresponding to the newly added objects into source FMEA structure and deletes objects from target FMEA structure corresponding to the deleted objects from source FMEA structure.<br />This operation considers only given list of objects (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>)   to adds, deletes or updates to or from target FMEA structure. <br />This operation always runs asynchronously in its own server in the background.",
      "exceptionCondition": "",
      "id": "alignFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "alignFMEAStructureAsync",
      "opTemplate": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::alignFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput>,&",
      "returnDescription": "None.",
      "useCase": "<b>Use Case.1:</b> Align a Variant FMEA structure with Master FMEA structure from which this Variant FMEA structure has created.<br />We have a Variant FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects which created from Master FMEA structure, after creation of Variant FMEA structure from Master FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>)  to &ldquo;Petrol Engine&rdquo; of Master FMEA structure.<br />Now we want to align this Variant FMEA structure with this Master FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Master FMEA structure and target FMEA structure as Variant FMEA structure and &ldquo;Wheel&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects into selected object list.<br />This operation adds &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and rename &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object to &ldquo;Petrol Engine&rdquo; of Variant FMEA structure.<br /><br /><b>Use Case.2: </b>Align a Master FMEA structure with Variant FMEA structure which is created from this Master FMEA structure.<br />We have a Master FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects from which Variant FMEA structure has created, after creation of Variant FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo;  System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Variant FMEA structure.<br />Now we want to align this Master FMEA structure with this Variant FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Variant FMEA structure and target FMEA structure as Master FMEA structure and &ldquo;Wheel&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects into selected object list.<br />This operation adds &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and rename &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object to &ldquo;Petrol Engine&rdquo; of Master FMEA structure."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of CascadeSeverityInput containing information to cascade severity.",
          "parameterName": "inputs"
        },
        {
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session, otherwise, operation is performed synchronously.",
          "parameterName": "runInBackground"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp06.1.0",
      "dependencies": "",
      "description": "This operation cascades down the severity (<b>qfm0Severity</b>) value defined for highest failure (<b>Qfm0FailureElement</b>) in the cause failure (<b>Qfm0Cause</b>) and effect failure (<b>Qfm0Effect</b>) hierarchy to each failure below. When the operation is initiated for FMEA Root node (<b>Qfm0FMEANode</b>), severity cascading is done for all the failures in the FMEA tree structure. Maximum value of severity is considered for cascading it down.<br />In case of background mode, this operation files an asynchronous request to cascade the severity value and releases the client immediately so that the user can perform other operation.",
      "exceptionCondition": "",
      "id": "cascadeSeverity#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput>,&$bool",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "cascadeSeverity",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::cascadeSeverity#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput>,&$bool",
      "returnDescription": "Updated objects are returned in the updated list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br /><br />Following partial error may be returned:&nbsp;&nbsp;&nbsp;&nbsp;<br />397099 The Severity of Failure Element can not be modified because it is connected as a cause in the failure hierarchy. It&rsquo;s value will be cascaded down from the highest failure in the hierarchy automatically.<br />397100 The selected object for cascading severity is invalid. The supported types are: &quot;Qfm0FMEANode&quot; and &quot;Qfm0FailureElement&quot;.<br />397101 Severity cascading operation failed. Please refer to the Cascade Severity logs or syslogs.",
      "useCase": "<b>Use Case.1:</b><br />Cascade severity value to all sub-levels in failure hierarchy<br />We have a failure hierarchy in car FMEA.<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Car inoperable at night<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Light doesn&rsquo;t start<br />&nbsp;&nbsp;&nbsp;&nbsp;Car won&rsquo;t start&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Battery dead&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Broken wire &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Broken switch<br /><br /><br /><br />&lsquo;Light doesn&rsquo;t start&rsquo; is a cause (<b>Qfm0Cause</b>) to &lsquo;Car inoperable at night&rsquo; failure (<b>Qfm0FailureElement</b>).<br />&lsquo;Car inoperable at night&rsquo; is an effect (<b>Qfm0Effect</b>) to &lsquo;Light doesn&rsquo;t start&rsquo; failure. &lsquo;Light doesn&rsquo;t start&rsquo; has causes &lsquo;Battery dead&rsquo;, &lsquo;Broken wire&rsquo;, &lsquo;Broken switch&rsquo;. &lsquo;Battery dead&rsquo; failure has two effects &lsquo;Car won&rsquo;t start&rsquo; and &lsquo;Light doesn&rsquo;t start&rsquo;. When user gives severity value 8 to effect failure &lsquo;Car inoperable at night&rsquo;, same will be carried by &lsquo;Light doesn&rsquo;t start&rsquo; failure. Suppose &lsquo;Car won&rsquo;t start&rsquo; effect failure has the severity value 10, then 10 being maximum of 8 and 10 from two effect failures, &lsquo;Battery dead&rsquo; will be set with severity value as 10. Since, &lsquo;Broken wire&rsquo; and &lsquo;Broken switch&rsquo; has only one effect failure with severity value 8, they will be set with value 8.<br /><br /><b>Use Case.2:</b><br />Cascade severity value to all sub-levels in failure hierarchy for failures in FMEA<br />We have a FMEA structure.<br /><br />Car (<b>Qfm0FMEANode</b>)<br />  |<br />  |- Wheel (<b>Qfm0SystemElement</b>)<br />  |<br />  |- Headlight (<b>Qfm0SystemElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |- Illuminate the roadway (<b>Qfm0FunctionElement</b>)&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|- Light does not start (<b>Qfm0FailureElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |- Car inoperable at night (<b>Qfm0Effect</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |-Broken wire (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |-Broken switch (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |-Battery dead (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |- Car won't start (<b>Qfm0Effect</b>)<br /><br />When user initiates cascade severity operation for Car FMEA, severity values from effect failures &lsquo;Car inoperable at night&rsquo; and &lsquo;Car won&rsquo;t start&rsquo; will be transferred to all sub-levels. Maximum value of severity from effect failures will be considered for cascading down."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of CascadeSeverityInput containing information to cascade severity.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp06.1.0",
      "dependencies": "",
      "description": "This operation cascades down the severity (<b>qfm0Severity</b>) value defined for highest failure (<b>Qfm0FailureElement</b>) in the cause failure (<b>Qfm0Cause</b>) and effect failure (<b>Qfm0Effect</b>) hierarchy to each failure below. When the operation is initiated for FMEA Root node (<b>Qfm0FMEANode</b>), severity cascading is done for all the failures in the FMEA tree structure. Maximum value of severity is considered for cascading it down.<br />This operation always runs asynchronously in its own server in the background.",
      "exceptionCondition": "",
      "id": "cascadeSeverityAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "cascadeSeverityAsync",
      "opTemplate": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::cascadeSeverityAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput>,&",
      "returnDescription": "Alert message.",
      "useCase": "<b>Use Case.1:</b><br />Cascade severity value to all sub-levels in failure hierarchy<br />We have a failure hierarchy in car FMEA.<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Car inoperable at night<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Light doesn&rsquo;t start<br />&nbsp;&nbsp;&nbsp;&nbsp;Car won&rsquo;t start&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;------------------------------------------<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Battery dead&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Broken wire &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Broken switch<br /><br /><br /><br />&lsquo;Light doesn&rsquo;t start&rsquo; is a cause (<b>Qfm0Cause</b>) to &lsquo;Car inoperable at night&rsquo; failure (<b>Qfm0FailureElement</b>).<br />&lsquo;Car inoperable at night&rsquo; is an effect (<b>Qfm0Effect</b>) to &lsquo;Light doesn&rsquo;t start&rsquo; failure. &lsquo;Light doesn&rsquo;t start&rsquo; has causes &lsquo;Battery dead&rsquo;, &lsquo;Broken wire&rsquo;, &lsquo;Broken switch&rsquo;. &lsquo;Battery dead&rsquo; failure has two effects &lsquo;Car won&rsquo;t start&rsquo; and &lsquo;Light doesn&rsquo;t start&rsquo;. When user gives severity value 8 to effect failure &lsquo;Car inoperable at night&rsquo;, same will be carried by &lsquo;Light doesn&rsquo;t start&rsquo; failure. Suppose &lsquo;Car won&rsquo;t start&rsquo; effect failure has the severity value 10, then 10 being maximum of 8 and 10 from two effect failures, &lsquo;Battery dead&rsquo; will be set with severity value as 10. Since, &lsquo;Broken wire&rsquo; and &lsquo;Broken switch&rsquo; has only one effect failure with severity value 8, they will be set with value 8.<br /><br /><b>Use Case.2:</b><br />Cascade severity value to all sub-levels in failure hierarchy for failures in FMEA<br />We have a FMEA structure.<br /><br />Car (<b>Qfm0FMEANode</b>)<br />  |<br />  |- Wheel (<b>Qfm0SystemElement</b>)<br />  |<br />  |- Headlight (<b>Qfm0SystemElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |- Illuminate the roadway (<b>Qfm0FunctionElement</b>)&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|- Light does not start (<b>Qfm0FailureElement</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |- Car inoperable at night (<b>Qfm0Effect</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |-Broken wire (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |-Broken switch (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |-Battery dead (<b>Qfm0Cause</b>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |- Car won't start (<b>Qfm0Effect</b>)<br /><br />When user initiates cascade severity operation for Car FMEA, severity values from effect failures &lsquo;Car inoperable at night&rsquo; and &lsquo;Car won&rsquo;t start&rsquo; will be transferred to all sub-levels. Maximum value of severity from effect failures will be considered for cascading down."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of structures containing information to compare FMEA structures.",
          "parameterName": "inputs"
        },
        {
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "parameterName": "runInBackground"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation compares a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa.<br />This operation finds newly added, deleted objects from or to source FMEA Structure by comparing it with target FMEA structure and also finds  updated objects from source FMEA Structure by comparing it with corresponding objects of target FMEA structure and store these compare result, further these compare result used to show difference of target FMEA Structure with source FMEA Structure.<br />In case of background mode, this operation files an asynchronous request to aligns a FMEA structure with another FMEA structure and releases the client immediately so that the user can perform other operation.",
      "exceptionCondition": "",
      "id": "compareFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput>,&$bool",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "compareFMEAStructure",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::compareFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput>,&$bool",
      "returnDescription": "The newly created objects are returned in the created list and updated objects are returned in the updated list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />Following partial error may be returned:&nbsp;&nbsp;&nbsp;&nbsp;<br />397076 The given target FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397077 The given source FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.",
      "useCase": "<b>Use Case.1:</b> Compares a Variant FMEA structure with Master FMEA structure from which this Variant FMEA structure has created.<br />We have a Variant FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects which created from Master FMEA structure, after creation of Variant FMEA structure from Master FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>)   to &ldquo;Petrol Engine&rdquo; of Master FMEA structure.<br />Now we want to compare this Variant FMEA structure with this Master FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Master FMEA structure and target FMEA structure as Variant FMEA structure.<br />This operation finds newly added &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and updates &ldquo;Petrol Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object of Master FMEA structure and store these compare result, further these compare result used to show difference of Variant FMEA Structure with Master FMEA Structure.<br /><br /><b>Use Case.2:</b> Align a Master FMEA structure with Variant FMEA structure which is created from this Master FMEA structure.<br />We have a Master FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects from which Variant FMEA structure has created, after creation of Variant FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo;  System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Variant FMEA structure.<br />Now we want to compare this Master FMEA structure with this Variant FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Variant FMEA structure and target FMEA structure as Master FMEA structure.<br />This operation finds newly added &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and updates &ldquo;Petrol Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object of Variant FMEA structure and store these compare result, further these compare result used to show difference of Master FMEA Structure with Variant FMEA Structure."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of structures containing information to compare FMEA structures.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.2.0",
      "dependencies": "",
      "description": "This operation compares a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa.<br />This operation finds newly added, deleted objects from or to source FMEA Structure by comparing it with target FMEA structure and also finds  updated objects from source FMEA Structure by comparing it with corresponding objects of target FMEA structure and store these compare result, further these compare result used to show difference of target FMEA Structure with source FMEA Structure.<br />This operation always runs asynchronously in its own server in the background.",
      "exceptionCondition": "",
      "id": "compareFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput>,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "compareFMEAStructureAsync",
      "opTemplate": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::compareFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput>,&",
      "returnDescription": "None.",
      "useCase": "<b>Use Case.1:</b> Compares a Variant FMEA structure with Master FMEA structure from which this Variant FMEA structure has created.<br />We have a Variant FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects which created from Master FMEA structure, after creation of Variant FMEA structure from Master FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Master FMEA structure.<br />Now we want to compare this Variant FMEA structure with this Master FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Master FMEA structure and target FMEA structure as Variant FMEA structure.<br />This operation finds newly added &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and updates &ldquo;Petrol Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object of Master FMEA structure and store these compare result, further these compare result used to show difference of Variant FMEA Structure with Master FMEA Structure.<br /><br /><b>Use Case.2:</b> Align a Master FMEA structure with Variant FMEA structure which is created from this Master FMEA structure.<br />We have a Master FMEA structure which contain &ldquo;Car&rdquo; and &ldquo;Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) objects from which Variant FMEA structure has created, after creation of Variant FMEA structure, &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) added and renamed &ldquo;Engine&rdquo;  System Element (<b>Qfm0SystemElement</b>) to &ldquo;Petrol Engine&rdquo; of Variant FMEA structure.<br />Now we want to compare this Master FMEA structure with this Variant FMEA structure.<br />To achieve this, for this operation needs to pass source FMEA structure as Variant FMEA structure and target FMEA structure as Master FMEA structure.<br />This operation finds newly added &ldquo;Wheel&rdquo; System Element (<b>Qfm0SystemElement</b>) object and updates &ldquo;Petrol Engine&rdquo; System Element (<b>Qfm0SystemElement</b>) object of Variant FMEA structure and store these compare result, further these compare result used to show difference of Master FMEA Structure with Variant FMEA Structure."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Input structure for holding the data required to configure FMEA structure which is created from Item structure in context of configuration. Input contains Configuration information and target System Element.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Qfm0qcfmea",
      "createRelease": "Awp05.0.0",
      "dependencies": "",
      "description": "This operation configures FMEA structure based on configuration of a product structure which was used originally for generating FMEA structure.",
      "exceptionCondition": "",
      "id": "configureFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::ConfigureFMEAStructureInput,&",
      "interface": "Qfm0::Soa::FmeaManager::FMEADataManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "configureFMEAStructure",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::configureFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::ConfigureFMEAStructureInput,&",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;ServiceData:  Created Missing System Element (<b>Qfm0SystemElement</b>) are added in the created list and Updated System Element (<b>Qfm0SystemElement</b>) are added in the updated list of ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397051 : The targetSystemElement is invalid, supported type is <b>Qfm0SystemElement</b> object.<br />397052 : The FMEA structure not created from Item Structure.<br />397053 : The productContext is invalid, supported type is <b>Awb0ProductContextInfo</b> object.<br />397054 : The productContext not application for Item Structure from which FMEA structure created.",
      "useCase": "Configure a FMEA structure by given configuration.<br />We have FMEA structure which created using Part structure in context of configuration C1, now we want to configure it by different configuration C2. For example: Shows FMEA structure in context of C2 configuration.<br />This operation configure Part structure (corresponding to FMEA structure) by C2 configuration and shows only those System Elements (<b>Qfm0SystemElement</b>) corresponding to its Part Revision appear in Part structure in context of configuration C2 and hide other System Elements (<b>Qfm0SystemElement</b>), This operation also creates a missing System Element (<b>Qfm0SystemElement</b>) for the Part Revision corresponding to which no System Elements (Qfm0SystemElement) exists in FMEA structure."
    }
  ],
  "OperationTemplate": [
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure hold the data required to add Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation adds Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object. <br />When user adds Higher Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object, then Focus Element Function object will be the Lower Level Function of these Function objects similar things will happen while adding Lower Level Functions.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::addHigherLowerLevelFunctions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::addHigherLowerLevelFunctions",
      "returnConst": "false",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;serviceData:  The list of created relation objects are added into the created list of ServiceData. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397058: Higher or Lower Level Function was not removed because invalid Focus Element Function provided. The supported type is &quot;<b>Qfm0FunctionElement</b>&quot; object.<br />397059: Higher or Lower Level Function was not removed because invalid relation name provided. The supported types are: &quot;<b>Qfm0Calling</b>&quot;, and &quot;<b>Qfm0CalledBy</b>&quot;.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of Input structures containing information to align FMEA structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "runInBackground"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation aligns a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa. <br />This operation updates target FMEA structure objects as per changes occurring in corresponding objects of a source FMEA structure, it also adds objects into target FMEA structure corresponding to the newly added objects into source FMEA structure and deletes objects from target FMEA structure corresponding to the deleted objects from source FMEA structure.<br />This operation considers only given list of objects (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) to adds, deletes or updates to or from target FMEA structure. <br />In case of background mode, this operation files an asynchronous request to aligns a FMEA structure with another FMEA structure and releases the client immediately so that the user can perform other operation.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::alignFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput>,&$bool",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::alignFMEAStructure",
      "returnConst": "false",
      "returnDescription": "The newly created FMEA structure objects are returned in the created list and updated objects are returned in the updated list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />Following partial error may be returned:&nbsp;&nbsp;&nbsp;&nbsp;<br />397076 The given target FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397077 The given source FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397078 The selected object is invalid, is not a part of source or target FMEA structure.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure holds the data required to generate FMEA structure from Item structure. Input contains Source object, Configuration information, Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) information.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation generates a Failure Mode Effect analysis (FMEA) structure for a given Item structure. It creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and under it create System Element (<b>Qfm0SystemElement</b>) for every Item Revision which is appear in Item structure in context of configuration applied on it.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::generateFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::GenerateFMEAStructureInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::generateFMEAStructure",
      "returnConst": "false",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;GenerateFMEAStructureResponse:  The Output structure give the Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and the created FMEA objects which are in the created objects list of the ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397033 : The source object is invalid. The supported types are: &quot;<b>ItemRevision</b>&quot;, &quot;<b>BOMLine</b>&quot; and &quot;<b>Awb0Element</b>&quot;.<br />397038 : The product context is invalid. The supported type is &quot;<b>Awb0ProductContextInfo</b>&quot; object.<br />397039 : The provided input is invalid to create Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure for generating form sheet printable report. Input contains Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) and output file format.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation generates printable form sheet report from given Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>). The generated report is saved in the FMS transient volume and an FMS ticket is returned.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::generateFormSheetPrintReports#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetPrintReportInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::generateFormSheetPrintReports",
      "returnConst": "false",
      "returnDescription": "The Output structure containing list of TransientFileTicketInfo objects for retrieving generated report file. A TransientFileTicketInfo object contains the file name, the transient ticket information for the generated report file and service data.<br /><br />Following error codes are returned in the ServiceData. <br />397025: The source FMEA Object is invalid, supported types are <b>Qfm0FMEANode</b> or <b>Qfm0SystemElement</b>. <br />397034: The Given Report format is invalid, supported formats are HTML, PDF and MSExcel.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure containing information to get FMEA structure compare result.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation provides a compares result of target Failure Mode Effect Analysis (FMEA) structure with respective to source FMEA structure, this compare result used to show difference of target FMEA Structure with source FMEA Structure.<br />In compare result, this operation provides focus object&rsquo;s underline objects which are only exists in target structure, missing in target structure, whose meta data modified, whose underline structure modified or whose meta data along with its underline structure modified with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.<br />This operation allows the caller to send the search input, and sorting data to get compare result according it and it also support pagination.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getFMEAStructureCompareResult#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::getFMEAStructureCompareResult",
      "returnConst": "false",
      "returnDescription": "The Output structure containing compare result of target FMEA structure with respective to source FMEA structure.<br /><br />Following partial errors may be in the ServiceData.<br />397079 The given source context FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397080 The given target context FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397081 The given focus object is invalid, is not a part of source or target FMEA structure.<br />397082 Invalid value specified for &ldquo;OBJECT_TYPE&rdquo; key in search criteria, specified object class does not exist.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure containing information to get FMEA structure compare result.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::FMEAStructureCompareResultResponse2",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp06.1.0",
      "description": "This operation returns the compare results of target Failure Mode Effect Analysis (FMEA) structure with respective to source FMEA structure, this compare result is used to show difference of target FMEA Structure with source FMEA Structure.<br />In compare result, this operation returns the child objects which are not aligned with target structure along with compare verdict like &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;.<br />This operation allows the caller to send the search input, and sorting data to get compare result according it and it also support pagination.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::FMEAStructureCompareResultResponse2#Qfm0::Soa::FmeaManager::FMEADataManagement::getFMEAStructureCompareResult2#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAStructureCompareResultInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::getFMEAStructureCompareResult2",
      "returnConst": "false",
      "returnDescription": "The compare result of target FMEA structure with respective to source FMEA structure.<br /><br />Following partial errors may be returned.<br />397079 The given source context FMEA Root Node is not of a type &quot;Qfm0FMEANode&quot;.<br />397080 The given target context FMEA Root Node is not of a type &quot;Qfm0FMEANode&quot;.<br />397081 The given focus object is invalid, is not a part of source or target FMEA structure.<br />397082 Invalid value specified for &ldquo;OBJECT_TYPE&rdquo; key in search criteria, specified object class does not exist.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure for getting data required to view FMEA form sheet. Input contains Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>), cursor information and sort criteria.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp04.3.0",
      "description": "This operation retrieves data required to view Failure Mode Effect Analysis(FMEA) form sheet based on given Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>), cursor information and sort criteria. Form sheet header contain information of Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) object and each row of form sheet includes System Element(<b>Qfm0SystemElement</b>), Function Element(<b>Qfm0FunctionElement</b>), Failure Effect(<b>Qfm0FailureElement</b>/<b>Qc0Failure</b>), Severity, Failure Mode(<b>Qfm0FailureElement</b>), Failure Cause(<b>Qfm0FailureElement</b>/<b>Qc0Failure</b>), Current Prevention Control Action(<b>Qam0QualityAction</b>), Occurrence, Current Detection Control Action(<b>Qam0QualityAction</b>), Detection, Initial Action Priority, Optimization Prevention Action(<b>Qam0QualityAction</b>), Occurrence, Optimization Detection Action(<b>Qam0QualityAction</b>), Detection, Final Action Priority, Characteristics.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getFormSheetData#const,Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::getFormSheetData",
      "returnConst": "false",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;FormSheetResponse:  The information required for rendering FMEA form sheet in Active workspace client. It includes Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) Object, list of form sheet rows data, cursor information, and sort criteria .<br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;The following partial errors may be returned:<br />397025: The source fmeaObject  is invalid, Supported types are <b>Qfm0FMEANode</b> or  <b>Qfm0SystemElement</b>. <br />397026: The source <b>Qfm0SystemElement</b>  does not have parent of type <b>Qfm0FMEANode</b>.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetInput2",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure for getting data required to view FMEA form sheet. Input contains Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) and cursor information.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetResponse2",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation retrieves data required to view Failure Mode Effect Analysis (FMEA) form sheet based on given Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) and cursor. Form sheet header contain information of Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and each row of form sheet includes data based on configuration file attached to FMEA Guideline (<b>Qfm0FMEAGuideline</b>) Object. which is attached to Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetResponse2#Qfm0::Soa::FmeaManager::FMEADataManagement::getFormSheetData2#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetInput2,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::getFormSheetData2",
      "returnConst": "false",
      "returnDescription": "The information required for rendering FMEA form sheet in Active workspace client. This includes a form sheet header in HTML format, form sheet column, data and cursor information in custom JSON format as specified in FormSheetResponse2 structure and Service Data containing plain object and error codes if any.<br /><br />Following error codes are returned in the ServiceData. <br />397025: The source FMEA Object is invalid, supported types are <b>Qfm0FMEANode</b> or <b>Qfm0SystemElement</b>.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure for getting data required for net view. Input contains FMEA objects, view name, query mode and inquiry information.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.1.0",
      "description": "This operation retrieves data required to view Failure Mode Effect Analysis (FMEA) Net Views based on given FMEA objects, view name, query mode and cursor. In net view nodes are FMEA objects, the relation between returned objects and given objects may be relation (GRM) or reference property. The data provided by this operation used for rendering net view (combination of structure and tree graph) on client.",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getNetViewData#const,Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::getNetViewData",
      "returnConst": "false",
      "returnDescription": "The information required for rendering FMEA net view in Active workspace client. It includes node, edge information and properties of net view group information and service data.<br /><br />Following partial errors may be returned: <br /><br />397056: Not all selected objects support net view.<br />397057: The requested view is not supported for given objects.<br />397058: The given expansion direction is not supported in net view. <br />397059: The given expansion type is not supported in net view.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The input structure for getting data required for displaying Process Flow Chart. Input contains FMEA Objects, view name and query mode.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp06.1.0",
      "description": "This operation retrieves data required to view Process Flow Diagram based on selected System Element Representation ( Qfm0SystemElement), view name, and query mode.. In Process Flow Chart nodes are System Element Representation of type &ldquo;Process&rdquo;. The data provided by this operation is used for rendering Process Flow Chart oin Active Workspace client for selected System Element Representation. (Qfm0SystemElement)",
      "id": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartResponse#Qfm0::Soa::FmeaManager::FMEADataManagement::getProcessFlowChartData#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::getProcessFlowChartData",
      "returnConst": "false",
      "returnDescription": "The information required for rendering Process Flow Chart for selected System Element Representation (Qfm0SystemElement) in Active workspace client. It includes node, edge information and properties of process flow chart group information.<br /><br />Following partial errors may be returned:<br />397098: Process Flow Chart is not supported for selected object.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::ImportFmeaInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A map (string, list of strings) of FMEA guideline object (Qfm0FMEAGuideline) UID and the list of MSR file tickets.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation imports Monitoring and System Response (MSR) formatted XML files for Failure Mode Effect Analysis (FMEA) and creates FMEA objects as a result of successful import. Filet ticket information of the MSR files and corresponding FMEA guidelines information are given as input to this operation and output is the newly created FMEA objects as result of successful import. This operation requires mapping file name to pe picked up from the Preference &ndash; Qfm0MSRToPLMXMLMappingFile.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaFromMSR#const,Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::ImportFmeaInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaFromMSR",
      "returnConst": "false",
      "returnDescription": "The created Failure Mode Effect Analysis Root Node objects (Qfm0FMEANode) are returned in the created list of ServiceData.<br /><br />The following partial errors may be returned: <br />397062: File was not imported because it is not a valid MSR format.<br />397063: Given UID of FMEA Guideline object is not valid.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A map (string, list of strings) of FMEA guideline object (<b>Qfm0FMEAGuideline</b>) UID and the list of MSR file tickets.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "runInBackground"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp06.1.0",
      "description": "This operation imports Monitoring and System Response (MSR) formatted XML files for Failure Mode Effect Analysis (FMEA) and creates <b>Qfm0FMEANode</b>, <b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qfm0SystemEleSpec</b>, <b>Qfm0FunctionEleSpec</b>, <b>Qc0Failure</b>, <b>Aqc0CharElement</b>, <b>Qfm0CalledBy</b>, <b>Qfm0Calling</b>, <b>Qfm0Cause</b>, <b>Qfm0ControlAction</b>, <b>Qfm0Effect</b>, <b>Qfm0FunctionRequirement</b>, <b>Qfm0InspectionDefinition</b>, <b>Qfm0OptimizationAction</b>, <b>Qam0QualityAction</b> objects because of successful import. File ticket information of the MSR files and corresponding FMEA guidelines (<b>Qfm0FMEAGuideline</b>) information are given as input to this operation. This operation requires mapping file name to be provided in Preference: &ldquo;Qfm0MSRToPLMXMLMappingFile&rdquo;.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaMSRXML#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput,&$bool",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaMSRXML",
      "returnConst": "false",
      "returnDescription": "The created Failure Mode Effect Analysis Root Node object (<b>Qfm0FMEANode</b>) are returned in the created list of ServiceData.       <br /><br />The following partial errors may be returned: <br />397062: File was not imported because it is not a valid MSR format.<br />397063: Given UID of FMEA Guideline object is not valid.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of structures containing information to align FMEA structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "void",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation aligns a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa. <br />This operation updates target FMEA structure objects as per changes occurring in corresponding objects of a source FMEA structure, it also adds objects into target FMEA structure corresponding to the newly added objects into source FMEA structure and deletes objects from target FMEA structure corresponding to the deleted objects from source FMEA structure.<br />This operation considers only given list of objects (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>)   to adds, deletes or updates to or from target FMEA structure. <br />This operation always runs asynchronously in its own server in the background.",
      "id": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::alignFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::AlignFMEAStructureInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::alignFMEAStructureAsync",
      "returnConst": "false",
      "returnDescription": "None.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A map (string, list of strings) of FMEA guideline object (<b>Qfm0FMEAGuideline</b>) UID and the list of MSR file tickets.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "void",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp06.1.0",
      "description": "This operation imports Monitoring and System Response (MSR) formatted XML files for Failure Mode Effect Analysis (FMEA) and creates: <b>Qfm0FMEANode</b>, <b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qfm0SystemEleSpec</b>, <b>Qfm0FunctionEleSpec</b>, <b>Qc0Failure</b>, <b>Aqc0CharElement</b>, <b>Qfm0CalledBy</b>, <b>Qfm0Calling</b>, <b>Qfm0Cause</b>, <b>Qfm0ControlAction</b>, <b>Qfm0Effect</b>, <b>Qfm0FunctionRequirement</b>, <b>Qfm0InspectionDefinition</b>, <b>Qfm0OptimizationAction</b>, <b>Qam0QualityAction</b> objects because of successful import. File ticket information of the MSR files and corresponding FMEA guidelines (<b>Qfm0FMEAGuideline</b>) information are given as input to this operation. This operation requires mapping file name to be provided in Preference: &ldquo;Qfm0MSRToPLMXMLMappingFile&rdquo;. This operation always runs asynchronously in its own server in the background.",
      "id": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaMSRXMLAsync#const,Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ImportFmeaMSRXMLInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::importFmeaMSRXMLAsync",
      "returnConst": "false",
      "returnDescription": "None.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::RebaseFMEAStructureInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure for hold the data required to rebase FMEA structure. Input contains Source Item structure Information and Target System Element.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation rebases a Failure Mode Effect analysis (FMEA) structure to the given Item structure in context of configuration applied on it. It also saves <b>Awb0ProductContextInfo</b> object associated with the Item Structure, with FMEA structure. A FMEA structure can be rebased to a different revision of the Item than the existing.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::rebaseFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::RebaseFMEAStructureInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::rebaseFMEAStructure",
      "returnConst": "false",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;ServiceData:  Created System Element (<b>Qfm0SystemElement</b>) are added in the created list and Updated System Element (<b>Qfm0SystemElement</b>) are added in the updated list of ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397033 : The source object is invalid. The supported types are: &quot;<b>ItemRevision</b>&quot;, &quot;<b>BOMLine</b>&quot; and &quot;<b>Awb0Element</b>&quot;.<br />397034 : The target system element is invalid. The supported type is &quot;<b>Qfm0SystemElement</b>&quot; object.<br />397035 : The target system element is not associated with the source structure.<br />397036 : The target system element is not associated with the source object.<br />397037 : The target system element is associated with multiple source structures.<br />397038 : The product context is invalid. The supported type is &quot;<b>Awb0ProductContextInfo</b>&quot; object.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure hold the data required to remove Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects from Focus Element Function (<b>Qfm0FunctionElement</b>) object.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation removes Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects from Focus Element Function (<b>Qfm0FunctionElement</b>) objects. <br />When user removes Higher Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects from Focus Element Function (<b>Qfm0FunctionElement</b>) objects, then Focus Element Function object will be no longer Lower Level Function of these Function objects similar things will happen while deleting Lower Level Functions.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::removeHigherLowerLevelFunctions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::HigherLowerLevelFunctionsInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::removeHigherLowerLevelFunctions",
      "returnConst": "false",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;serviceData:  The list of deleted relation objects are added into the deleted list of ServiceData. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397051: Function was not added as lower level function because it is already part of the function hierarchy.<br />397052: Function was not added as higher level function because it is already part of the function hierarchy.<br />397053: Lower level function was not added because invalid focus element function provided. The supported type is &quot;<b>Qfm0FunctionElement</b>&quot; object.<br />397054: Higher Level function was not added because invalid focus element function provided. The supported type is &quot;<b>Qfm0FunctionElement</b>&quot; object. <br />397055: Adding Higher or Lower Level Function failed due to invalid relation name provided. The supported types are: &quot;<b>Qfm0Calling</b>&quot; or &quot;<b>Qfm0CalledBy</b>&quot;.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::AddCauseActionsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of AddCauseActionsInput structure which define the object to add Actions to Cause in context of Effect.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp04.3.0",
      "description": "This operation creates and adds Actions (Qam0QualityAction) to given Cause (Qfm0FailureElement or Qc0Failure) in context of Effect (Qfm0FailureElement).",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::addCauseActions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::AddCauseActionsInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FailureModeManagement::addCauseActions",
      "returnConst": "false",
      "returnDescription": "Newly created relation (Qfm0ControlAction or Qfm0OptimizationAction) objects are returned in created objects of ServiceData. Any failure will be returned with the clientId mapped to the error message in the ServiceData. Error code can be one of the following:<br />397019: Invalid Cause Object &quot;%s&quot; provided.<br />397020: Invalid Effect Object &quot;%s&quot; provided.<br />35003: The provided Relation type &quot;%s&quot; is invalid.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of input structures for add Causes and Effects.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp04.3.0",
      "description": "This operation adds Causes(<b>Qfm0Cause</b>) and Effects(<b>Qfm0Effect</b>) to Failure Mode (<b>Qfm0FailureElement</b>) Object.<br />When user adds Failure(<b>Qfm0FailureElement</b> or <b>Qc0Failure</b>) as Cause or Effect to Failure Mode, by default that Failure Mode will because Effect or Cause to that Failure.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::addCausesAndEffects#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FailureModeManagement::addCausesAndEffects",
      "returnConst": "false",
      "returnDescription": "The list of created relation objects. The following partial errors may be returned.<br />Partial Errors.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397012&nbsp;&nbsp;&nbsp;&nbsp;Failure Cause was not added as cause because it is already part of the failure hierarchy.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397013&nbsp;&nbsp;&nbsp;&nbsp;Failure Effect was not added as cause because it is already part of the failure hierarchy.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397014&nbsp;&nbsp;&nbsp;&nbsp;Failure Cause was not added because invalid Failure Mode provided. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397015&nbsp;&nbsp;&nbsp;&nbsp;Failure Effect was not added because invalid Failure Mode provided.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397016&nbsp;&nbsp;&nbsp;&nbsp;Adding Cause or Effect failed due to invalid relation Name provided.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::RemoveCauseActionsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of RemoveCauseActionsInput structure define the object to remove Actions which has attached Cause.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp04.3.0",
      "description": "This operation remove Actions (Qam0QualityAction) which has added to cause by relation (Qfm0ControlAction or Qfm0OptimizationAction) in context of Effect (Qfm0FailureElement).",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::removeCauseActions#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::RemoveCauseActionsInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FailureModeManagement::removeCauseActions",
      "returnConst": "false",
      "returnDescription": "Deleted Action (Qam0QualityAction) objects are returned in deleted objects list of ServiceData. Any failure will be returned with the clientId mapped to the error message in the ServiceData. Error code can be one of the following:<br />397019: Invalid Cause Object &quot;%s&quot; provided.<br />397020: Invalid Effect Object &quot;%s&quot; provided.<br />397021: Invalid Action Object &quot;%s&quot; provided.<br />35003: The provided Relation type &quot;%s&quot; is invalid.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of input structures for remove Causes and Effects.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp04.3.0",
      "description": "This operation removes Causes (<b>Qfm0Cause</b>) and Effects (<b>Qfm0Effect</b>) from Failure Mode (<b>Qfm0FailureElement</b>) Object.<br />When user removes Failure (<b>Qfm0FailureElement</b> or <b>Qc0Failure</b>) Cause or Effect from Failure Mode, it is related Effect or Cause will be removed.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FailureModeManagement::removeCausesAndEffects#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CauseEffectInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FailureModeManagement::removeCausesAndEffects",
      "returnConst": "false",
      "returnDescription": "The list of deleted objects. The following partial errors may be returned.<br />Partial Errors:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Failure Cause was not removed because there are actions associated with it.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove Failure Cause and Effect Failed due to invalid Failure Object provided. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;397019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove Failure Cause and Effect Failed due to invalid relation name provided.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of CascadeSeverityInput containing information to cascade severity.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session, otherwise, operation is performed synchronously.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "runInBackground"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp06.1.0",
      "description": "This operation cascades down the severity (<b>qfm0Severity</b>) value defined for highest failure (<b>Qfm0FailureElement</b>) in the cause failure (<b>Qfm0Cause</b>) and effect failure (<b>Qfm0Effect</b>) hierarchy to each failure below. When the operation is initiated for FMEA Root node (<b>Qfm0FMEANode</b>), severity cascading is done for all the failures in the FMEA tree structure. Maximum value of severity is considered for cascading it down.<br />In case of background mode, this operation files an asynchronous request to cascade the severity value and releases the client immediately so that the user can perform other operation.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::cascadeSeverity#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput>,&$bool",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::cascadeSeverity",
      "returnConst": "false",
      "returnDescription": "Updated objects are returned in the updated list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br /><br />Following partial error may be returned:&nbsp;&nbsp;&nbsp;&nbsp;<br />397099 The Severity of Failure Element can not be modified because it is connected as a cause in the failure hierarchy. It&rsquo;s value will be cascaded down from the highest failure in the hierarchy automatically.<br />397100 The selected object for cascading severity is invalid. The supported types are: &quot;Qfm0FMEANode&quot; and &quot;Qfm0FailureElement&quot;.<br />397101 Severity cascading operation failed. Please refer to the Cascade Severity logs or syslogs.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of CascadeSeverityInput containing information to cascade severity.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "void",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp06.1.0",
      "description": "This operation cascades down the severity (<b>qfm0Severity</b>) value defined for highest failure (<b>Qfm0FailureElement</b>) in the cause failure (<b>Qfm0Cause</b>) and effect failure (<b>Qfm0Effect</b>) hierarchy to each failure below. When the operation is initiated for FMEA Root node (<b>Qfm0FMEANode</b>), severity cascading is done for all the failures in the FMEA tree structure. Maximum value of severity is considered for cascading it down.<br />This operation always runs asynchronously in its own server in the background.",
      "id": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::cascadeSeverityAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::CascadeSeverityInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::cascadeSeverityAsync",
      "returnConst": "false",
      "returnDescription": "Alert message.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of structures containing information to compare FMEA structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "runInBackground"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation compares a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa.<br />This operation finds newly added, deleted objects from or to source FMEA Structure by comparing it with target FMEA structure and also finds  updated objects from source FMEA Structure by comparing it with corresponding objects of target FMEA structure and store these compare result, further these compare result used to show difference of target FMEA Structure with source FMEA Structure.<br />In case of background mode, this operation files an asynchronous request to aligns a FMEA structure with another FMEA structure and releases the client immediately so that the user can perform other operation.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::compareFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput>,&$bool",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::compareFMEAStructure",
      "returnConst": "false",
      "returnDescription": "The newly created objects are returned in the created list and updated objects are returned in the updated list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />Following partial error may be returned:&nbsp;&nbsp;&nbsp;&nbsp;<br />397076 The given target FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397077 The given source FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of structures containing information to compare FMEA structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "void",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation compares a target Failure Mode Effect Analysis (FMEA) structure with a source FMEA structure from which this target FMEA structure has created and vice versa.<br />This operation finds newly added, deleted objects from or to source FMEA Structure by comparing it with target FMEA structure and also finds  updated objects from source FMEA Structure by comparing it with corresponding objects of target FMEA structure and store these compare result, further these compare result used to show difference of target FMEA Structure with source FMEA Structure.<br />This operation always runs asynchronously in its own server in the background.",
      "id": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::compareFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CompareFMEAStructureInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::compareFMEAStructureAsync",
      "returnConst": "false",
      "returnDescription": "None.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::ConfigureFMEAStructureInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Input structure for holding the data required to configure FMEA structure which is created from Item structure in context of configuration. Input contains Configuration information and target System Element.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.0.0",
      "description": "This operation configures FMEA structure based on configuration of a product structure which was used originally for generating FMEA structure.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::configureFMEAStructure#const,Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::ConfigureFMEAStructureInput,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::configureFMEAStructure",
      "returnConst": "false",
      "returnDescription": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;ServiceData:  Created Missing System Element (<b>Qfm0SystemElement</b>) are added in the created list and Updated System Element (<b>Qfm0SystemElement</b>) are added in the updated list of ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. <br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Following error codes are returned in the ServiceData. <br />397051 : The targetSystemElement is invalid, supported type is <b>Qfm0SystemElement</b> object.<br />397052 : The FMEA structure not created from Item Structure.<br />397053 : The productContext is invalid, supported type is <b>Awb0ProductContextInfo</b> object.<br />397054 : The productContext not application for Item Structure from which FMEA structure created.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of Input structures containing information to creates a Variant FMEA structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If true, the operation is performed in background mode in a separate asynchronous server session; otherwise, perform the operation synchronously.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "runInBackground"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation creates a Variant Failure Mode Effect Analysis (FMEA) structure for a given Master FMEA structure. It creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) as top object and under it create System Element (<b>Qfm0SystemElement</b>), Function Element (<b>Qfm0FunctionElement</b>), Failure Element (<b>Qfm0FailureElement</b>), Cause (<b>Qfm0Cause</b>), Effect (<b>Qfm0Effect</b>), Quality Action (<b>Qam0QualityAction</b>) objects corresponding to objects from Master FMEA structure.<br />In case of background mode, this operation files an asynchronous request to creates a Variant FMEA structure for a given Master FMEA structure and releases the client immediately so that the user can perform other operation.",
      "id": "Teamcenter::Soa::Server::ServiceData#Qfm0::Soa::FmeaManager::FMEADataManagement::createVariantFMEAStructure#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput>,&$bool",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::createVariantFMEAStructure",
      "returnConst": "false",
      "returnDescription": "The newly created Variant FMEA structure objects are returned in the created list of the ServiceData. The ServiceData will be empty in case of asynchronous mode.<br /><br />Following partial error may be returned:<br />397069 The given FMEA Root Node is not of a type &quot;<b>Qfm0FMEANode</b>&quot;.<br />397070 The Variant FMEA was not created as given FMEA Element list is invalid.<br />397071 The Variant FMEA was not created as input FMEA is not a Master FMEA.<br />397072 The Variant FMEA was not created as given FMEA Element is not a part of given Master FMEA.<br />397073 The Variant FMEA was not created as given list of objects not released.<br />397074 The given FMEA root Node is not Latest Released.<br />397075 The given FMEA root Node is not Released.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of Input structures containing information to creates a Variant FMEA structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "void",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "Awp05.2.0",
      "description": "This operation creates a Variant Failure Mode Effect Analysis (FMEA) structure for a given Master FMEA structure. It creates a Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) as top object and under it create System Element (<b>Qfm0SystemElement</b>), Function Element (<b>Qfm0FunctionElement</b>), Failure Element (<b>Qfm0FailureElement</b>), Cause (<b>Qfm0Cause</b>), Effect (<b>Qfm0Effect</b>), Quality Action (<b>Qam0QualityAction</b>) objects corresponding to objects from Master FMEA structure.<br />This operation always runs asynchronously in its own server in the background.",
      "id": "void#Qfm0::Soa::FmeaManager::FMEADataManagement::createVariantFMEAStructureAsync#const,std::vector<Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::CreateVariantFMEAStructureInput>,&",
      "name": "Qfm0::Soa::FmeaManager::FMEADataManagement::createVariantFMEAStructureAsync",
      "returnConst": "false",
      "returnDescription": "None.",
      "returnFreeMemory": "false",
      "static": "false"
    }
  ],
  "ServiceInterface": [
    {
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This service contains the operations related to managing Failure Mode Effect Analysis (FMEA) data such as create, edit, delete elements, form sheet, relation between elements, net view, process flow chart, import MSR FMEA.",
      "libraryName": "Qfm0SoaFmeaManager",
      "name": "FMEADataManagement",
      "namespace": "Qfm0::Soa::FmeaManager",
      "serviceLibraryRef": ""
    },
    {
      "createRelease": "Awp04.3.0",
      "dependencies": "",
      "description": "This service contains the operation related to managing and perforning operations on Failure Mode (  Failure representation ) Object.",
      "libraryName": "Qfm0SoaFmeaManager",
      "name": "FailureModeManagement",
      "namespace": "Qfm0::Soa::FmeaManager",
      "serviceLibraryRef": ""
    }
  ],
  "Struct": [
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifier used to track the input object. Primarily this is used to identify which PartialError corresponds to which input object.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Cause (Qfm0FailureElement or Qc0Failure) to against which Actions get added.",
          "name": "cause"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Effect (Qfm0FailureElement) against its context Actions get added to Cause.",
          "name": "effect"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::CreateActionInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A List of CreateActionInput objects each one of which represents the CreateInput information used to create an action( <b>Qam0QualityAction</b> ) object.",
          "name": "actionsInput"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Relation Object Type Name String (Qfm0ControlAction or Qfm0OptimizationAction) which get created between Effect and Actions, This operation support to Qfm0ControlAction and Qfm0OptimizationAction relation object&rsquo;s type name.",
          "name": "relationName"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Input structure define the object to add Actions to Cause in the context of Effect.",
      "isPublished": "false",
      "name": "AddCauseActionsInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Root Node (<b>Qfm0FMEANode</b>) object of source FMEA structure (Base structure).",
          "name": "sourceFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Root Node   (<b>Qfm0FMEANode</b>) object of target FMEA structure (FMEA structure which is going to align).",
          "name": "targetFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the latest revision of selected objects will be used to align target FMEA structure; otherwise, the given revision of selected objects will be used to align target FMEA structure.",
          "name": "useLatestRevision"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of selected objects (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) to consider in align operation.",
          "name": "selectedObjects"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The input information to align FMEA structures.",
      "isPublished": "false",
      "name": "AlignFMEAStructureInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>).",
          "name": "fmeaObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::ObjectDifference"
            }
          ],
          "description": "Difference (&quot;None&quot;, &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;) of FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.",
          "name": "difference"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The structure containing FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) and its difference (&quot;None&quot;, &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;) with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.",
      "isPublished": "false",
      "name": "FMEAObjCompareResult",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>).",
          "name": "fmeaObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Difference (&quot;None&quot;, &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;) of FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.",
          "name": "difference"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) has non-aligned child objects.",
          "name": "hasNonAlignedChild"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The structure containing FMEA Object (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>), its difference (&quot;None&quot;, &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;) and info about non-aligned child objects with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.",
      "isPublished": "false",
      "name": "FMEAObjCompareResult2",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Root Node (<b>Qfm0FMEANode</b>) object of source FMEA structure (Base structure).",
          "name": "sourceFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Root Node (<b>Qfm0FMEANode</b>) object of target FMEA structure.",
          "name": "targetFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Object from FMEA structure to get compare result of its underline objects: (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>).",
          "name": "focusObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the latest revision of source FMEA structure objects used to get compare result; otherwise, the given revision of source FMEA structure objects used to get compare result.",
          "name": "useLatestRevision"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SearchInput"
            }
          ],
          "description": "The search input containing search criteria.",
          "name": "searchInput"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The input information to get FMEA structure compare result.",
      "isPublished": "false",
      "name": "FMEAStructureCompareResultInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::FMEAObjCompareResult"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of structure containing FMEA Objects (<b>Qfm0SystemElement</b>, <b>Qfm0FunctionElement</b>, <b>Qfm0FailureElement</b>, <b>Qam0QualityAction</b>) ) and its difference (&quot;None&quot;, &quot;OnlyInTarget&quot;, &quot;MissingInTarget&quot;, &quot;MetaModified&quot;, &quot;StructureModified&quot;, &quot;MetaAndStructureModified&quot;) with compare result type to identify whether object is only exists in target structure, missing in target structure, its meta data modified, its underline structure modified or its meta data along with its underline structure modified with respective to source FMEA structure.",
          "name": "compareResults"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Total number of objects found in compare result.",
          "name": "totalFound"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Total number of business objects loaded.",
          "name": "totalLoaded"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SearchCursor"
            }
          ],
          "description": "Cursor for the results returned so far.",
          "name": "cursor"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The Output structure containing compare result of target FMEA structure with respective to source FMEA structure.",
      "isPublished": "false",
      "name": "FMEAStructureCompareResultResponse",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::FMEAObjCompareResult2"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of structures containing FMEA compare results.",
          "name": "compareResults"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Total number of objects found in compare result.",
          "name": "totalFound"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Total number of business objects loaded.",
          "name": "totalLoaded"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SearchCursor"
            }
          ],
          "description": "Cursor for the results returned so far.",
          "name": "cursor"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The Output structure containing compare result of target FMEA structure with respective to source FMEA structure.",
      "isPublished": "false",
      "name": "FMEAStructureCompareResultResponse2",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Object Type.",
          "name": "objectType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Object Property name.",
          "name": "propertyName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::SearchFilter"
            }
          ],
          "description": "The details of a filter. It indicates if it is a string type, date type or numeric type of search filter that is to be applied to the FMEA form sheet.",
          "name": "searchFilterCategory"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The search term operator indicating the logic for combining this search term. The list of valid values are:<br />&bull; <b>Include</b> (OR)<br />&bull; <b>Filter</b> (AND)<br />&bull; <b>Exclude</b> (NOT)",
          "name": "criteriaOperatorType"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Output structure specifies the output search criteria and updated filters.",
      "isPublished": "false",
      "name": "FilterCriteria",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Value associated with cell of FMEA form sheet.",
          "name": "cellVal"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "How many cells contain same data.",
          "name": "count"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The structure define the cell value of FMEA form sheet.",
      "isPublished": "false",
      "name": "FormSheetCellVal",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the first page of the results has been reached.",
          "name": "startReached"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the last page of the results has been reached.",
          "name": "endReached"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetObject"
            }
          ],
          "description": "Select the page in which this object appear.",
          "name": "selectedObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The Cursor start position for the result formsheet row returned so far.",
          "name": "startIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The  Cursor end position for the result formsheet row returned so far.",
          "name": "endIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The maximum number of formsheet row that can be returned in one service call.",
          "name": "pageSize"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Cursor that represents point to which the results have been fetched. This field is used for subsequent calls.",
      "isPublished": "false",
      "name": "FormSheetCursor",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the first page of the results has been reached.",
          "name": "startReached"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the last page of the results has been reached.",
          "name": "endReached"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Select the page in which this object appears in given column (column Key).",
          "name": "selectedObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Column Key where selected object needs to be searched.",
          "name": "columnKey"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The Cursor start position for the result form sheet row returned so far.",
          "name": "startIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The Cursor end position for the result form sheet row returned so far.",
          "name": "endIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The maximum number of form sheet row that can be returned in one service call.",
          "name": "pageSize"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Cursor that represents point to which the results have been fetched. This field is used for subsequent calls.",
      "isPublished": "false",
      "name": "FormSheetCursor2",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FilterCriteria"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Provide search criteria.",
          "name": "formSheetFilterCriteria"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, response contains updated filters. If false, response does not contain any filter data. E.g. in case of scrolling down the contents, this flag can be set as false not to return updated filter as there won't be any updates.",
          "name": "fetchUpdatedFilters"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Input structure specifies the information to search and filter the result.",
      "isPublished": "false",
      "name": "FormSheetFilterInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Selected object for which severity to be cascaded. Supported types are <b>Qfm0FMEANode</b> and <b>Qfm0FailureElement</b>.",
          "name": "selectedObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Severity value which rates the severity of the potential effect of the failure. Severity value is ignored if selected object is FMEA Root Node(<b>Qfm0FMEANode</b>).",
          "name": "severity"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The input information to cascade severity.",
      "isPublished": "false",
      "name": "CascadeSeverityInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FilterCriteria"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Updated search and filters including the user specified filters that were provided in FormSheetFilterInput.",
          "name": "formSheetFilterCriteria"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Output structure specifies the output search criteria and updated filters.",
      "isPublished": "false",
      "name": "FormSheetFilterOutput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifier used to track the input object. Primarily this is used to identify which PartialError corresponds to which input object.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) Object corresponding to its data(This has specified in above operation description) populate to view FMEA form sheet.",
          "name": "fmeaObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetCursor"
            }
          ],
          "description": "Cursor that represents point to which the results have been fetched. This field is used for subsequent calls.",
          "name": "cursor"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetFilterInput"
            }
          ],
          "description": "Input data to search and filter FMEA form sheet data.",
          "name": "filter"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::SortCriteria"
            }
          ],
          "description": "Criteria to sort the occurrences based on internal property name and sorting order &quot;ASCENDING&quot; or &quot;DESCENDING&quot;.",
          "name": "sortCriteria"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Input structure for getting data required to view FMEA form sheet. Input contains Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>), cursor information and sort criteria.",
      "isPublished": "false",
      "name": "FormSheetInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) Object corresponding to its data (This has specified in above operation description) populate to view FMEA form sheet.",
          "name": "businessObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "IncludeFSHeader is used to add form sheet header in response. If includeFSHeader is true then form sheet header is included in response, else it is excluded from response. Form sheet header is given in plain HTML to display on client.",
          "name": "includeFSHeader"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FormSheetCursor2"
            }
          ],
          "description": "Cursor that point from which the results has to be fetched. This field is used for subsequent calls.",
          "name": "cursor"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Input structure for getting data required to view FMEA form sheet. Input contains Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>), cursor information and sort criteria.",
      "isPublished": "false",
      "name": "FormSheetInput2",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Column index of FMEA form sheet in which object appear.",
          "name": "colIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Object which appear in particular column of FMEA form sheet.",
          "name": "cellObject"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The structure define object which appear in particular column of FMEA form sheet.",
      "isPublished": "false",
      "name": "FormSheetObject",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of context object(s) (required for generating form sheet Printable report). Objects should be type or subtype of Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>).",
          "name": "contextObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Report format Type: &ldquo;HTML&rdquo;, &ldquo;PDF&rdquo;, &ldquo;MSExcel&rdquo;.",
          "name": "reportFormat"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Input structure for generating FMEA form sheet printable report. Input contains Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) or System Element (<b>Qfm0SystemElement</b>) objects and report format.",
      "isPublished": "false",
      "name": "FormSheetPrintReportInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::TransientFileTicketInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of TransientFileTicketInfo object(s) for retrieving generated report file. The TransientFileTicketInfo object includes the file name, ticket information.",
          "name": "transientFileTicketInfos"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The Service data including partial errors that are mapped to the client id from the input.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Output structure containing list of TransientFileTicketInfo objects for retrieving generated report file. A TransientFileTicketInfo object contains the file name, the transient ticket information for the generated report file and service data.",
      "isPublished": "false",
      "name": "FormSheetPrintReportResponse",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Failure Mode Effect Analysis Root Node(<b>Qfm0FMEANode</b>) Object whose information to be displayed as form sheet header.",
          "name": "fmeaRootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetRow"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of FMEA form sheet rows data.",
          "name": "formSheetRows"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Total number of rows found in FMEA form sheet.",
          "name": "totalRowsFound"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetCursor"
            }
          ],
          "description": "Cursor that represents point to which the results have been fetched. This field is used for subsequent calls.",
          "name": "cursor"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetFilterOutput"
            }
          ],
          "description": "Updated search filter information.",
          "name": "filter"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Contains the list of all BusinessObjects that make up the output, as well as any errors that might have ocurred as part of the service invocation.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Output structure of data information required for rendering FMEA form sheet in Active workspace client. It includes Failure Mode Effect analysis Root Node (<b>Qfm0FMEANode</b>) Object, list of formsheet row data, cursor information, sort criteria and service data.",
      "isPublished": "false",
      "name": "FormSheetResponse",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The form sheet header view in HTML format to display on client.",
          "name": "formSheetHeader"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The form sheet column, data and cursor information in JSON format. It is used to generate form sheet view. <br />JSON schema is as follow:<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;&quot;columns&quot;: [<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;key&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;headerText&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;group&quot;: [<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;key&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;headerText&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;headerCssClass&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;width&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;typeName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;propertyName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;dataType&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;columnGroupId&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;templateStyle&quot;: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&quot;rows&quot;: [<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;cell&quot;: [<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;colKey&quot;:&quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;propertyName&quot;:&quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;type&quot;:&quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;uid&quot;:&quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;stringLenth&quot;:&quot;int&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;isArray&quot;:&quot;bool&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;merge&quot;:&quot;bool&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&quot;cursor&quot;:{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;startIndex&quot;:&quot;int&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;endIndex&quot;:&quot;int&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;pageSize&quot;:&quot;int&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;totalFound&quot;:&quot;int&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;startReached&quot;:&quot;bool&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;endReached&quot;:&quot;bool&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}",
          "name": "formSheetViewModel"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Output structure of data information required for rendering FMEA form sheet in Active workspace client. It includes Form Sheet Header in HTML format, From Sheet Data (column config, data to render rows and cursor information) in Json Format and service data.",
      "isPublished": "false",
      "name": "FormSheetResponse2",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement::FormSheetCellVal"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of cell values for single row of FMEA form sheet.",
          "name": "formSheetCellsVal"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The structure define the single row of FMEA form sheet, It hold row data in the form of cells.",
      "isPublished": "false",
      "name": "FormSheetRow",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::SourceStructureInfo"
            }
          ],
          "description": "The structure holds the all the information of source structure i.e. Item structure which required to generate FMEA structure from it.",
          "name": "sourceStructInfo"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::CreateRootNodeInput"
            }
          ],
          "description": "The structure holds the all the information (represents the CreateInput) required to create Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object.",
          "name": "rootNodeInfo"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Input structure holds the data required to generate FMEA structure from Item structure. Input contains Source object, Configuration information, Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) information.",
      "isPublished": "false",
      "name": "GenerateFMEAStructureInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This value is unchanged from the input and can be used to identify this response element with the corresponding input element.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Failure Mode Object (<b>Qfm0FailureElement</b>) to which Causes And Effects needs to be added.",
          "name": "failureModeObject"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Failure Objects (<b>Qfm0FailureElement</b> or <b>Qc0Failure</b>) Which will be added as Causes And Effects to Failure Mode Object (<b>Qfm0FailureElement</b>).",
          "name": "failureObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The Relation name for associating failureModeObject and secondaryObjects. Values of relationName should be &ldquo;Qfm0Cause&rdquo; or &ldquo;Qfm0Effect&rdquo;.",
          "name": "relationName"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Input structure for adding or removing Cause and Effect from Failure Mode.",
      "isPublished": "false",
      "name": "CauseEffectInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object under it all FMEA objects created.",
          "name": "rootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Output structure give the Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object and the created FMEA objects which are in the created objects list of the ServiceData. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.",
      "isPublished": "false",
      "name": "GenerateFMEAStructureResponse",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Focus Element Function (<b>Qfm0FunctionElement</b>) object to which Higher or Lower Level Functions will be added.",
          "name": "focusElementFunction"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects which will be added as Higher or Lower Level Functions to Focus Element Function (<b>Qfm0FunctionElement</b>) object.",
          "name": "functions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The Relation name for associating Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to Focus Element Function (<b>Qfm0FunctionElement</b>) object. Valid values for relationName are: &ldquo;<b>Qfm0CalledBy</b>&rdquo; for Higher Level Function &ldquo;<b>Qfm0Calling</b>&rdquo; for Lower Level Function.",
          "name": "relationName"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Input structure hold the data required to add or remove Higher or Lower Level Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects to or from Focus Element Function (<b>Qfm0FunctionElement</b>) object. Input contains Focus Element Function (<b>Qfm0FunctionElement</b>) object, List of Function (<b>Qfm0FunctionElement</b> or <b>Qfm0FunctionEleSpec</b>) objects and Relation Name (<b>Qfm0Calling</b> for Lower Level Function or <b>Qfm0CalledBy</b> for Higher Level Function).",
      "isPublished": "false",
      "name": "HigherLowerLevelFunctionsInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Net view name.",
          "name": "viewName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of net view root UIDs. It is the UID list of Teamcenter business objects.",
          "name": "rootUIDs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewGroup"
            }
          ],
          "description": "Net view group.",
          "name": "netViewGroup"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::Node"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Node structures.",
          "name": "nodes"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::Edge"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Edge structures.",
          "name": "edges"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewInquiryMap"
            }
          ],
          "description": "A map (string, string) of inquery and answer pairs.",
          "name": "analysisResult"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "The Output structure of data information required for rendering FMEA Net View. It includes view name, rootids, net view groups, nodes information, edges information, inquiries analysis.",
      "isPublished": "false",
      "name": "NetView",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of the filter.",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Display name of the filter.",
          "name": "displayName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::RGBValue"
            }
          ],
          "description": "The color used for legend of this filter at client side.",
          "name": "color"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "Structure for representing information of a filter item, including filter name, RGB values to color the legend of the filter at client side. It is used in structure NetViewGroup.",
      "isPublished": "false",
      "name": "NetViewFilter",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Backend name of the group. Currently, there are two available groups, &ldquo;relations&rdquo; (for graph edges) or &ldquo;objects&rdquo; (for graph nodes).",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewFilter"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of net view group filter names.",
          "name": "filters"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "The net view group is a group name with a list of filters. A filter take effect either on node or edge, it filters out graph that fall into its type.",
      "isPublished": "false",
      "name": "NetViewGroup",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of object UIDs that input as net view root nodes. It is the UID list of FMEA element (<b>Qfm0FMEAElement</b>) objects.",
          "name": "rootUIDs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name of net view that will be used for graph expansion.",
          "name": "viewName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::QueryModeEnum"
            }
          ],
          "description": "The query mode that applied to this query operation. Currently supported modes are DegreeOnly, ExpandOnly, ExpandAndDegree.",
          "name": "queryMode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetViewParamMap"
            }
          ],
          "description": "A map (string, list of string),  of net view parameter names and parameter values Parameters are inputs leveraged by the net view generation logic. Supported parameters are direction, level and expansionType. Supported values of parameters: 1. direction : forward, backward, all (Default)<br />2. level : no of levels to be expanded ex. 1, 2<br />3. expantionType: tree (default), structure. These values are in context of graph.",
          "name": "netViewParamMap"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of inquiries. Inqueries identify calculations that are performed using the net view contents as inputs. Currently supported inquires: &ldquo;numOfNodes&rdquo; no of right/left nodes to return for each rootUID object.",
          "name": "inquiries"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "The Input structure for getting data required to view FMEA Net View. Input contains Selected Objects uids, View Name (SystemNetView,FunctionNetView or FailureNetView) , queryMode (DegreeOnly, ExpandOnly or ExpandAndDegree), Net View parameter input (Expansion direction, level and type) and inquiries (conditional filter).",
      "isPublished": "false",
      "name": "NetViewInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::NetView"
            }
          ],
          "description": "Net view data for FMEA objects.",
          "name": "netView"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "The Output structure of data information required for rendering FMEA Net View. It includes view name, rootIds, nodes information, edges information, inquiries analysis and service data.",
      "isPublished": "false",
      "name": "NetViewResponse",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The node ID is uniqe identification string.",
          "name": "nodeId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of node.",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Teamcenter Business object.",
          "name": "metaObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::StringPropertyMap"
            }
          ],
          "description": "A map (string, string) of property name and property value pairs For example, [in_degree, 2], [out_degree, 4].",
          "name": "props"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "This structure contains information of net view node .It contains node id, name, meta object and property map which contains information like in_degree, out_degree, Group.",
      "isPublished": "false",
      "name": "Node",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "UID of selected System Element Representation(Qfm0SystemElement)",
          "name": "rootUID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Process Flow Chart view name.",
          "name": "viewName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::Node"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Node structures.",
          "name": "nodes"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::Edge"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Edge structures.",
          "name": "edges"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartGroup"
            }
          ],
          "description": "Process Flow Chart group.",
          "name": "processFlowChartGroup"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::NodeShapeMap"
            }
          ],
          "description": "A Map (String, String) for rendering the shape of the node, where key is UID of the node and value is shape string. Acceptable values are triangle, square, circle, pentagon.",
          "name": "nodeShapeMap"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The ProcessFlowChart structure contains information about the nodes, edges, view name, root uidUID, map        <br /> containing the shape for the node and map for filtering of colours, display names, etc.",
      "isPublished": "false",
      "name": "ProcessFlowChart",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of the node.",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Display Name fot the node.",
          "name": "displayName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::RGBValue"
            }
          ],
          "description": "RGB value for node.",
          "name": "color"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "Structure for representing information of a filter item, including filter name, RGB values to color the legend of the filter at client side. It is used in structure ProcessFlowChartGroup.",
      "isPublished": "false",
      "name": "ProcessFlowChartFilter",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Root Node (<b>Qfm0FMEANode</b>) object of source FMEA structure (Base structure).",
          "name": "sourceFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "FMEA Root Node (<b>Qfm0FMEANode</b>) object of target FMEA structure (FMEA structure which is going to align).",
          "name": "targetFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the latest revision of source FMEA structure objects used to compare target FMEA structure objects; otherwise, the given revision of source FMEA structure objects used to compare target FMEA structure objects.",
          "name": "useLatestRevision"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The input information to compare FMEA structures.",
      "isPublished": "false",
      "name": "CompareFMEAStructureInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Backend name of the group. Currently, there are two available groups, &ldquo;relations&rdquo; (for graph edges) or &ldquo;objects&rdquo; (for graph nodes).",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartFilter"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of process flow chart filter names.",
          "name": "filters"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The process flow chart group is a group name with a list of filters. Filter takes effect either on node or edge, it filters out graph that fall into its type.",
      "isPublished": "false",
      "name": "ProcessFlowChartGroup",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "UID of selected System Element Representation. (Qfm0SystemElement)",
          "name": "rootUID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The Query mode that is applied for this operation. Currently supported modes are DegreeOnly, ExpandOnly, ExpandAndDegree.",
          "name": "queryMode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChartParams"
            }
          ],
          "description": "A map (string, list of string) of process flow chart parameter names &amp; parameter values. Parameters are inputs leveraged by the process flow chart generation logic. Supported parameters are 1. direction: forward, backward, all (Default) 2. level : o of levels to be expanded ex. 1, 2  3. expantionType: tree (default), structure. These values are  in context of graph.",
          "name": "processFlowChartParams"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The Input structure for getting data required to view Process Flow Chart. Input contains selected object UID, queryMode (DegreeOnly, ExpandOnly or ExpandAndDegree), Process Flow Chart parameters (Expansion direction, level and type).",
      "isPublished": "false",
      "name": "ProcessFlowChartInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement::ProcessFlowChart"
            }
          ],
          "description": "Process Flow Chart data for selected System Element Representation (Qfm0SystemElement).",
          "name": "processFlowChart"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "The Output structure of data information required for rendering Process Flow Chart. It includes view name, rootUID,nodes information, edges information, shape information for node and service data.",
      "isPublished": "false",
      "name": "ProcessFlowChartResponse",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "double"
            }
          ],
          "description": "The red component of color.",
          "name": "redValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "double"
            }
          ],
          "description": "The green component of color.",
          "name": "greenValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "double"
            }
          ],
          "description": "The blue component of color.",
          "name": "blueValue"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "Structure for representing color using RGB values, used in structure NetViewFilter.",
      "isPublished": "false",
      "name": "RGBValue",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The System Element (<b>Qfm0SystemElement</b>) which is under FMEA structure to rebase it.",
          "name": "targetSystemElement"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::SourceStructureInfo"
            }
          ],
          "description": "The structure holds the all the information of source structure i.e. Item structure which required to generate/rebase FMEA structure from it.",
          "name": "sourceStructInfo"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Input structure for hold the data required to rebase FMEA structure. Input contains Source Item structure Information and Target System Element.",
      "isPublished": "false",
      "name": "RebaseFMEAStructureInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifier used to track the input object. Primarily this is used to identify which PartialError corresponds to which input object.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Cause (Qfm0FailureElement or Qc0Failure) against which Actions has added.",
          "name": "cause"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Effect (Qfm0FailureElement) against its context Actions has added to Cause.",
          "name": "effect"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Actions (Qam0QualityAction) which has added to Cause by given relation object type.",
          "name": "actions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Relation Object Type Name String (Qfm0ControlAction or Qfm0OptimizationAction ) by which Actions has added to Cause, This operation support to Qfm0ControlAction and Qfm0OptimizationAction Relation Objects Type.",
          "name": "relationName"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "The Input structure define the object to remove actions corresponding to failure cause.",
      "isPublished": "false",
      "name": "RemoveCauseActionsInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The Cursor start position for the search result returned so far. Used for input and output.",
          "name": "startIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The Cursor end position for the search result returned so far. Used only for output.",
          "name": "endIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the first page of the results has been reached. Used only for output.",
          "name": "startReached"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, the last page of the results has been reached. Used only for output.",
          "name": "endReached"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "A structure containing cursor.",
      "isPublished": "false",
      "name": "SearchCursor",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The type of search filter. Valid values are &quot;StringFilter&quot;, &quot;DateFilter&quot;, &quot;NumericFilter&quot;.",
          "name": "searchFilterType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The value for a string filter. This field is applicable only if the &quot;searchFilterType&quot; field is set to &quot;StringFilter&quot;.",
          "name": "stringValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "description": "The starting value for a date filter. This field is applicable only if the &quot;searchFilterType&quot; field is set to &quot;DateFilter&quot;.",
          "name": "startDateValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "description": "The ending value for a date filter. This field is applicable only if the &quot;searchFilterType&quot; field is set to &quot;DateFilter&quot;.",
          "name": "endDateValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "double"
            }
          ],
          "description": "The starting value for a numeric filter. This field is applicable only if the &quot;searchFilterType&quot; field is set to &quot;NumericFilter&quot;.",
          "name": "startNumericValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "double"
            }
          ],
          "description": "The ending value for a numeric filter. This field is applicable only if the &quot;searchFilterType&quot; field is set to &quot;NumericFilter&quot;.",
          "name": "endNumericValue"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The number of values in the filter. This field is populated on the service response and is ignored on the service input.",
          "name": "count"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Specifies the details of a filter. It indicates if it is a string type, date type or numeric type of search filter that is to be applied to the FMEA form sheet.",
      "isPublished": "false",
      "name": "SearchFilter",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SearchCriteria"
            }
          ],
          "description": "A map (string, string) used to define the search criteria to perform the search. <br />To search objects by its name, the key is &quot;OBJECT_NAME&quot;, the value is name of object.  <br />To search objects by its type, the key is &quot;OBJECT_TYPE&quot;, the value is object class name.",
          "name": "searchCriteria"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SearchCursor"
            }
          ],
          "description": "Cursor object used in the search.",
          "name": "cursor"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The maximum number of search results to return. This value must be positive and greater than 0.",
          "name": "maxToReturn"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The maximum number of search results to load. This value must be positive and greater than 0.",
          "name": "maxToLoad"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SearchSortCriteria"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of criteria to use to sort the results.",
          "name": "searchSortCriteria"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "A structure containing input search criteria.",
      "isPublished": "false",
      "name": "SearchInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name of the field on which to perform the sorting.",
          "name": "fieldName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement::SortDirection"
            }
          ],
          "description": "The direction in which the sorting needs to be performed: 'ASC' or 'DESC'",
          "name": "sortDirection"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The criteria to use to sort the results.",
      "isPublished": "false",
      "name": "SearchSortCriteria",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The System Element (<b>Qfm0SystemElement</b>) which is under FMEA structure to configure it.",
          "name": "targetSystemElement"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>Awb0ProductContextInfo</b> object which holds configuration information.",
          "name": "productContext"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The Input structure for hold the data required to configure Failure Mode Effect Analysis (FMEA) structure which created from Item Structure in context of configuration. Input contains Configuration information and target System Element.",
      "isPublished": "false",
      "name": "ConfigureFMEAStructureInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Object type whose information show in form sheet.",
          "name": "objectType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Internal property name on which sorting is to be done.",
          "name": "propertyName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Order of sorting e.g. &quot;ASCENDING&quot; or &quot;DESCENDING&quot;.",
          "name": "sortDirection"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Criteria to sort the form sheet row based on internal property name and sorting order e.g. &quot; ASCENDING &quot; and &quot; DESCENDING &quot;.",
      "isPublished": "false",
      "name": "SortCriteria",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>ItemRevision</b> or <b>BOMLine</b> or <b>Awb0Element</b> object.",
          "name": "sourceObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>Awb0ProductContextInfo</b> object which holds configuration information.",
          "name": "productContext"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The structure holds the all the information of source structure i.e. Item structure which required to generate or rebase FMEA structure from it.",
      "isPublished": "false",
      "name": "SourceStructureInfo",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "FMS file ticket that corresponds to the generated file.",
          "name": "ticket"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name of generated report.",
          "name": "fileName"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "TransientFileTicketInfo object for retrieving generated printable report file. The TransientFileTicketInfo object includes the file name, ticket information.",
      "isPublished": "false",
      "name": "TransientFileTicketInfo",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::StringMap"
            }
          ],
          "description": "Map of string property names to values (string, string).",
          "name": "stringProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::StringVectorMap"
            }
          ],
          "description": "Initial values of properties of type string array. A map of property names to values (string/list of strings).",
          "name": "stringArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::DateMap"
            }
          ],
          "description": "Map of DateTime property names to values (string, date).",
          "name": "dateProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::DateVectorMap"
            }
          ],
          "description": "Initial values of properties of type DateTime array. A map of property names to values (string/list of DateTimes).",
          "name": "dateArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::TagMap"
            }
          ],
          "description": "Map of BusinessObject property names to values (string, BusinessObject).",
          "name": "tagProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::TagVectorMap"
            }
          ],
          "description": "Initial values of properties of type BusinessObject array. A map of property names to values (string/list of BusinessObjects).",
          "name": "tagArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::DoubleMap"
            }
          ],
          "description": "Map of double property names to values (string, double).",
          "name": "doubleProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::DoubleVectorMap"
            }
          ],
          "description": "Initial values of properties of type double array. A map of property names to values (string/list of doubles).",
          "name": "doubleArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::FloatMap"
            }
          ],
          "description": "Map of float property names to values (string, float).",
          "name": "floatProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::FloatVectorMap"
            }
          ],
          "description": "Initial values of properties of type float array. A map of property names to values (string/list of floats).",
          "name": "floatArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::IntMap"
            }
          ],
          "description": "Map of int property names to values (string, int).",
          "name": "intProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::IntVectorMap"
            }
          ],
          "description": "Initial values of properties of type int array. A map of property names to values (string/list of ints).",
          "name": "intArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::BoolMap"
            }
          ],
          "description": "Map of boolean property names to values (string, bool).",
          "name": "boolProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement::BoolVectorMap"
            }
          ],
          "description": "Initial values of properties of type bool array. A map of property names to values (string/list of bools).",
          "name": "boolArrayProps"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "This structure captures the inputs required for creation of an action( <b>Qam0QualityAction</b> ) business object.",
      "isPublished": "false",
      "name": "CreateActionInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::StringMap"
            }
          ],
          "description": "Map of string property names to values (string, string).",
          "name": "stringProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::StringVectorMap"
            }
          ],
          "description": "Initial values of properties of type string array. A map of property names to values (string/list of strings).",
          "name": "stringArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::DateMap"
            }
          ],
          "description": "Map of DateTime property names to values (string, date).",
          "name": "dateProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::DateVectorMap"
            }
          ],
          "description": "Initial values of properties of type DateTime array. A map of property names to values (string/list of DateTimes).",
          "name": "dateArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::RefObjMap"
            }
          ],
          "description": "Map of Reference <b>BusinessObject</b> property names to values (string, BusinessObject).",
          "name": "refObjProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::RefObjVectorMap"
            }
          ],
          "description": "Initial values of properties of type Reference <b>BusinessObject</b> array. A map of property names to values (string/list of BusinessObjects).",
          "name": "refObjArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::DoubleMap"
            }
          ],
          "description": "Map of double property names to values (string, double).",
          "name": "doubleProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::DoubleVectorMap"
            }
          ],
          "description": "Initial values of properties of type double array. A map of property names to values (string/list of doubles).",
          "name": "doubleArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FloatMap"
            }
          ],
          "description": "Map of float property names to values (string, float).",
          "name": "floatProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::FloatVectorMap"
            }
          ],
          "description": "Initial values of properties of type float array. A map of property names to values (string/list of floats).",
          "name": "floatArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::IntMap"
            }
          ],
          "description": "Map of int property names to values (string, int).",
          "name": "intProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::IntVectorMap"
            }
          ],
          "description": "Initial values of properties of type int array. A map of property names to values(string/list of ints).",
          "name": "intArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::BoolMap"
            }
          ],
          "description": "Map of boolean property names to values (string, bool).",
          "name": "boolProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::BoolVectorMap"
            }
          ],
          "description": "Initial values of properties of type bool array. A map of property names to values (string/list of bools).",
          "name": "boolArrayProps"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "The structure holding the all the information (represents the CreateInput) required to create Failure Mode Effect Analysis Root Node (<b>Qfm0FMEANode</b>) object.",
      "isPublished": "false",
      "name": "CreateRootNodeInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "qfm0qcfmea::Qfm0FMEANode"
            }
          ],
          "description": "Master FMEA Root Node (<b>Qfm0FMEANode</b>) object.",
          "name": "masterFMEARootNode"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "qfm0qcfmea::Qfm0SystemElement"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of the System Element (<b>Qfm0SystemElement</b>) objects from the Master FMEA structure.",
          "name": "selectedSysElements"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement::CreateRootNodeInput"
            }
          ],
          "description": "The structure holds the all the information (represents the CreateInput) required to create Root Node (<b>Qfm0FMEANode</b>) object of Variant FMEA structure.",
          "name": "variantFMEARootNodeInfo"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "The input information to creates a Variant FMEA structure for a Master FMEA structure.",
      "isPublished": "false",
      "name": "CreateVariantFMEAStructureInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Left node ID.",
          "name": "leftId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Right node ID.",
          "name": "rightId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The relation type or reference property name.",
          "name": "relationType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Teamcenter Relation object. Null incase of reference property.",
          "name": "metaObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement::StringPropertyMap"
            }
          ],
          "description": "A map (string, string) of property name and property value pairs.",
          "name": "props"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "This structure contains information of net view edge.It contains left node id, rignt node id, logical relation type, meta object and property map which contains information like styling, edge type.",
      "isPublished": "false",
      "name": "Edge",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    }
  ],
  "TcVersion": "tc13000.0.0",
  "Typedef": [
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "bool"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of bool property names to values (string, bool).",
      "isPublished": "false",
      "name": "BoolMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "bool"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of boolean property names to values (string, bool).",
      "isPublished": "false",
      "name": "BoolMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "double"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of double array property names to values (string, vector).",
      "isPublished": "false",
      "name": "DoubleVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "double"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of double array property names to values (string, vector).",
      "isPublished": "false",
      "name": "DoubleVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "float"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of float property names to values (string, float).",
      "isPublished": "false",
      "name": "FloatMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "float"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of float property names to values (string, float).",
      "isPublished": "false",
      "name": "FloatMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "float"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of float array property names to values (string, vector).",
      "isPublished": "false",
      "name": "FloatVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "float"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of float array property names to values (string, vector).",
      "isPublished": "false",
      "name": "FloatVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "This map contains the input required for importing FMEA. Key of this map is of type string which represents business object UID of selected FMEA guideline object and value is a vector of MSR file ticket strings.",
      "isPublished": "false",
      "name": "ImportFmeaInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "This map contains the input required for importing FMEA. Key of this map is of type string which represents business object UID of selected FMEA guideline object and value is a vector of MSR file ticket strings.",
      "isPublished": "false",
      "name": "ImportFmeaMSRXMLInput",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "int"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of int property names to values (string, int).",
      "isPublished": "false",
      "name": "IntMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "int"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of int property names to values (string, int).",
      "isPublished": "false",
      "name": "IntMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "bool"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of bool array property names to values (string, vector).",
      "isPublished": "false",
      "name": "BoolVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of int array property names to values (string, vector).",
      "isPublished": "false",
      "name": "IntVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of int array property names to values (string, vector).",
      "isPublished": "false",
      "name": "IntVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "The inquiry/answer map.",
      "isPublished": "false",
      "name": "NetViewInquiryMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "Net View parameter map.",
      "isPublished": "false",
      "name": "NetViewParamMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "A Map (String, String) for rendering the shape of the node, where key is UID of the node and value is shape string. Acceptable values are triangle, square, circle, pentagon.",
      "isPublished": "false",
      "name": "NodeShapeMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp06.1.0",
      "description": "A map (string, list of string), of process flow chart parameter names and parameter values. Parameters are inputs leveraged by the Process Flow Chart generation logic. Supported parameters are 1. Direction: forward, backward, all (Default). 2. Level:1,2 3. expansionType:tree(default),structure. These values are in context of graph.",
      "isPublished": "false",
      "name": "ProcessFlowChartParams",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2022_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of Reference <b>BusinessObject</b> property names to values (string, BusinessObject).",
      "isPublished": "false",
      "name": "RefObjMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of <b>BusinessObject</b> array property names to values (string, vector).",
      "isPublished": "false",
      "name": "RefObjVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.2.0",
      "description": "A map (string, string) used to define the search criteria to perform the search. <br />To search objects by its name, the key is &quot;OBJECT_NAME&quot;, the value is name of object.  <br />To search objects by its type, the key is &quot;OBJECT_TYPE&quot;, the value is object class name.",
      "isPublished": "false",
      "name": "SearchCriteria",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2021_06::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of string property names to values (string, string).",
      "isPublished": "false",
      "name": "StringMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "bool"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of bool array property names to values (string, vector).",
      "isPublished": "false",
      "name": "BoolVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of string property names to values (string, string).",
      "isPublished": "false",
      "name": "StringMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.1.0",
      "description": "This is output map for inquiry name and its inquiry string. Which are used while processing data.",
      "isPublished": "false",
      "name": "StringPropertyMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_12::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of string array property names to values (string, vector).",
      "isPublished": "false",
      "name": "StringVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of string array property names to values (string, vector).",
      "isPublished": "false",
      "name": "StringVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of <b>BusinessObject</b> property names to values (string, BusinessObject).",
      "isPublished": "false",
      "name": "TagMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of <b>BusinessObject</b> array property names to values (string, vector).",
      "isPublished": "false",
      "name": "TagVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of date property names to values (string, date).",
      "isPublished": "false",
      "name": "DateMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of DateTime property names to values (string, date).",
      "isPublished": "false",
      "name": "DateMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::DateTime"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of DateTime array property names to values (string, vector).",
      "isPublished": "false",
      "name": "DateVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::DateTime"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of DateTime array property names to values (string, vector).",
      "isPublished": "false",
      "name": "DateVectorMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "double"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp04.3.0",
      "description": "Map of double property names to values (string, double).",
      "isPublished": "false",
      "name": "DoubleMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2019_12::FailureModeManagement",
      "scope": "Qfm0::Soa::FmeaManager::FailureModeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "double"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "Awp05.0.0",
      "description": "Map of double property names to values (string, double).",
      "isPublished": "false",
      "name": "DoubleMap",
      "namespace": "Qfm0::Soa::Internal::FmeaManager::_2020_05::FMEADataManagement",
      "scope": "Qfm0::Soa::FmeaManager::FMEADataManagement"
    }
  ],
  "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
}